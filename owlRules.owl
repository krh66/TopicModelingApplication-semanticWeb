<?xml version="1.0"?>
<Ontology xmlns="http://www.w3.org/2002/07/owl#"
     xml:base="http://www.semanticweb.org/marcushsu/ontologies/2020/10/untitled-ontology-45"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     ontologyIRI="http://www.semanticweb.org/marcushsu/ontologies/2020/10/untitled-ontology-45">
    <Prefix name="" IRI="http://www.semanticweb.org/marcushsu/ontologies/2020/10/untitled-ontology-45"/>
    <Prefix name="owl" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="rdf" IRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    <Prefix name="xml" IRI="http://www.w3.org/XML/1998/namespace"/>
    <Prefix name="xsd" IRI="http://www.w3.org/2001/XMLSchema#"/>
    <Prefix name="rdfs" IRI="http://www.w3.org/2000/01/rdf-schema#"/>
    <Declaration>
        <Class IRI="#Body"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PostID"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Title"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasBody"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasCreateTime"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasParentID"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasPostTypeID"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasTitle"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#10"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#100"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#101"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#102"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#103"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#104"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#105"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#106"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#107"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#108"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#109"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#11"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1108"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1109"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1110"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1112"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1113"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1114"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1115"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1116"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1117"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1118"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1119"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1120"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1121"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1122"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1123"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1125"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1126"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1127"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1128"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1129"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1130"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1131"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1132"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1133"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1134"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1135"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1136"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1137"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1138"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1139"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1140"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1141"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1142"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1143"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1144"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1145"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1146"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1147"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1148"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1149"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1150"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1151"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1152"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1153"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1154"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1155"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1156"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1157"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1158"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1159"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1160"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1161"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1162"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1163"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1164"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1165"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1166"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1167"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1168"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1169"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1170"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1171"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1172"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1173"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1174"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1175"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1176"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1177"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1178"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1179"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1180"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1181"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1182"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1183"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1184"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1185"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1186"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1187"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1188"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1189"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1190"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1191"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1192"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1193"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1194"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1195"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1196"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1197"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1198"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1199"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#12"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1200"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1201"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1202"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1203"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1204"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1205"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1206"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1207"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1208"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1209"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1210"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1211"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1212"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1213"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1214"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1215"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1216"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1217"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1218"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1219"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1220"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1221"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1222"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1223"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1224"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1225"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1226"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1227"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1228"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1229"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1230"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1231"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1232"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1233"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1234"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1235"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1236"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1237"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1238"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1239"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1240"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#13"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#14"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#15"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#16"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#17"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#18"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#2"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#20"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#21"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#23"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#24"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#25"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#26"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#27"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#28"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#29"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#3"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#30"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#31"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#32"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#33"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#34"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#35"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#36"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#37"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#38"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#4"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#40"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#41"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#42"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#43"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#44"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#46"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#47"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#48"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#49"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#5"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#50"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#51"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#52"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#53"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#54"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#55"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#56"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#57"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#58"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#59"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#6"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#60"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#61"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#62"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#63"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#64"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#65"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#66"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#67"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#68"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#69"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#7"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#72"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#73"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#74"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#75"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#76"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#77"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#78"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#79"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#8"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#80"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#81"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#82"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#83"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#84"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#85"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#86"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#87"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#88"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#89"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#9"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#90"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#91"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#92"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#93"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#94"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#95"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#96"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#97"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#98"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#99"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#ShouldWeDescribeTheProcessOfBrewingASingleCupViaPouringWaterOverGroundCoffeeAspour-over-coffeeOrdrip-coffee?"/>
    </Declaration>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#10"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#100"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#101"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#102"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#103"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#104"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#105"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#106"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#107"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#108"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#109"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#11"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1108"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1109"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1110"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1112"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1113"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1114"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1115"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1116"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1117"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1118"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1119"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1120"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1121"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1122"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1123"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1125"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1126"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1127"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1128"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1129"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1130"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1131"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1132"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1133"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1134"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1135"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1136"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1137"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1138"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1139"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1140"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1141"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1142"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1143"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1144"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1145"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1146"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1147"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1148"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1149"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1150"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1151"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1152"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1153"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1154"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1155"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1156"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1157"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1158"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1159"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1160"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1161"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1162"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1163"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1164"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1165"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1166"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1167"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1168"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1169"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1170"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1171"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1172"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1173"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1174"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1175"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1176"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1177"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1178"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1179"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1180"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1181"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1182"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1183"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1184"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1185"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1186"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1187"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1188"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1189"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1190"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1191"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1192"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1193"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1194"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1195"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1196"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1197"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1198"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1199"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#12"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1200"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1201"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1202"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1203"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1204"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1205"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1206"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1207"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1208"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1209"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1210"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1211"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1212"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1213"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1214"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1215"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1216"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1217"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1218"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1219"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1220"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1221"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1222"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1223"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1224"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1225"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1226"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1227"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1228"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1229"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1230"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1231"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1232"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1233"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1234"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1235"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1236"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1237"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1238"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1239"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#1240"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#13"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#14"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#15"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#16"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#17"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#18"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#2"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#20"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#21"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#23"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#24"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#25"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#26"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#27"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#28"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#29"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#3"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#30"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#31"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#32"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#33"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#34"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#35"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#36"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#37"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#38"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#4"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#40"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#41"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#42"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#43"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#44"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#46"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#47"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#48"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#49"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#5"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#50"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#51"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#52"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#53"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#54"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#55"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#56"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#57"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#58"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#59"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#6"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#60"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#61"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#62"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#63"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#64"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#65"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#66"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#67"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#68"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#69"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#7"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#72"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#73"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#74"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#75"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#76"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#77"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#78"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#79"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#8"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#80"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#81"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#82"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#83"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#84"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#85"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#86"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#87"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#88"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#89"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#9"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#90"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#91"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#92"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#93"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#94"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#95"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#96"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#97"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#98"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PostID"/>
        <NamedIndividual IRI="#99"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#Title"/>
        <NamedIndividual IRI="#ShouldWeDescribeTheProcessOfBrewingASingleCupViaPouringWaterOverGroundCoffeeAspour-over-coffeeOrdrip-coffee?"/>
    </ClassAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1"/>
        <Literal>While answering a few of EdChum&apos;s questions I discovered that what I/we in the USA call pour over coffee is referred to as drip coffee in the UK. I added the pour-over tag to both questions I encountered but figured we should decide as a community which tag to use to describe this brewing process and then properly document it because drip-coffee means something different in the US (which is apparently referred to as filter-cofee in the UK). For clarification the method in question is shown in the image below. 
 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1"/>
        <Literal>2015-01-27T21:23:05.507</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1"/>
        <Literal>Should we describe the process of brewing a single cup via pouring water over ground coffee as pour-over-coffee or drip-coffee?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#10"/>
        <Literal>One inherent problem of product recommendations is that they are very attractive to spammers. With just a little effort it&apos;s hard to differentiate between spam and a well-meant and thoroughly researched recommendation.
Additionally they can be highly subjective and to top it all off, they have to meet certain requirements to be reasonably answered.
This all leads me to the conclusion, that product recommendations should be off-topic for this site. One can always ask for personal opinions in chat :)
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#10"/>
        <Literal>2015-01-27T22:53:17.090</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#10"/>
        <Literal>5</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#10"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#100"/>
        <Literal>Yes, this size will work fine, and it&apos;ll look nicer on high-dpi screens.

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#100"/>
        <Literal>2015-02-16T11:09:31.843</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#100"/>
        <Literal>97</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#100"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#101"/>
        <Literal>For the sake of discussion, how about a variation on the icon from Ron Cobb?
The icon I refer to can be seen in... Alien from Ridley Scott. Cobb designed the &quot;Semiotic Standard For All Commercial Trans-Stellar Utility Lifter And Heavy Element Transport Spacecraft&quot;. One of the icons is a simple, straight coffee cup. You can see it on a reproduction by a software company (see around the middle of the page).
The idea here is that this is very nerdy.

On a side note, an icon like that one could be for the chat room.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#101"/>
        <Literal>2015-02-16T13:56:00.227</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#101"/>
        <Literal>28</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#101"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#102"/>
        <Literal>Does it make sense to ask a question with not one specific answer, but many different answers to collect a list of things like &quot;known coffee types&quot; together with preparation method or is this more a wiki thing to collect them?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#102"/>
        <Literal>2015-02-16T16:38:17.187</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#102"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#102"/>
        <Literal>Is &quot;What type of coffee do you know?&quot;, a valid question?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#103"/>
        <Literal>Throughout the beta, we need members from the site whose focus is to engage the community, both in community-building issues and site management. That&apos;s why we select a few members from each community to act as temporary, provisional Moderators. You can read about the program here: Moderators Pro Tempore.
I am pleased to announce that these members have stepped up and generously volunteered their time to help us assure that each community’s issues are properly addressed:



We want to make this site a huge success, and these members are great examples of exactly the type of people we need to make this site succeed. Please welcome them for the hard work and time they contribute.
Did I overlook anyone?
Almost certainly. There are members who are actively involved and very deserving of recognition. My failure to account for everyone this early on is in no way a slight against them. Ideally, Moderators are elected by the community and that&apos;s why we eventually hold elections.
Most of all, be respectful and understanding of the Moderators Pro Tem. Members of your community are volunteering their time and learning on the job. It’s a learning experience for everyone.
Update - June 2015:
Sam Whited has resigned his moderator diamond. We wish him the best and thank him for his excellent service!
In his place, another community member has volunteered to step up to the plate. Please join me in welcoming:

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#103"/>
        <Literal>2015-02-16T21:51:04.520</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#103"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#103"/>
        <Literal>Moderator Pro Tem Announcement</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#104"/>
        <Literal>It&apos;s more &quot;a wiki thing.&quot;
Not every question about coffee is on topic for a Stack site about coffee: Stacks want to be neatly-sorted piles of questions and answers wherein experts solve actual problems that people are facing. The Stack Exchange has little interest in duplicating services other parts of the Internet are already good at providing, and is structured so that often those services just plain don&apos;t work here. This is why we are choosey about the questions we get.
Lets turn to the Help Center and see what it has to say about how question structure helps accomplish Stack goals.
The Help Center lists some flags indicating that a question might be a poor fit for the site. If a potential question hits more than one of the flags, that&apos;s a sign it&apos;s likely not gonna work out here.

To prevent your question from being flagged and possibly removed, avoid asking subjective questions where …

every answer is equally valid
there is no actual problem to be solved

(source)

A list of coffees would make every answer equally valid, and there&apos;s no actual problem being solved. That breaks our voting system, making it impossible for our answers to be neatly sorted by the groupmind.
Now lets look at signs of a good question:


Have you thoroughly searched for an answer before asking your question?
if you give us details and context, we can provide a useful answer.

(source)

The second bullet point there reinforces the idea that questions should have problems they&apos;re trying to solve: without a particular situation the querent faces, details and context for useful answers are impossible.
And the first bullet point really hits the thing on the nose: the Stack is a place to ask experts to leverage their education and experience in a field to solve problems we can&apos;t solve ourselves. The Stack is not a place to ask experts to do simple research for us.
For further reading, I suggest Repositories; Polling, Recommendations and subjective-ish stuff; Questions with educational value; Is trivia on topic?; and What&apos;s so problematic about a recommendation question having potentially hundreds of answers, anyway?.
And, of course, there&apos;s always Wikipedia&apos;s List of Coffee Drinks.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#104"/>
        <Literal>2015-02-16T22:04:07.300</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#104"/>
        <Literal>102</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#104"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#105"/>
        <Literal>Don&apos;t even try to answer it.
Yep, those type of questions are off-topic and there is no real problem. You want a list of coffee types, go up to Google and/or Wikipedia and look it up. To answer your question:
That is a wiki question, Downvote it and flag it, no questions asked
That&apos;s basically what you should do. Seriously, that question would not survive 5 minutes without at least 3 dowvotes, unless it was deleted. :-) I hope this answers your question!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#105"/>
        <Literal>2015-02-17T00:59:50.700</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#105"/>
        <Literal>102</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#105"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#106"/>
        <Literal>I disagree with the other answers. These sorts of questions (if properly worded) are certainly on topic. The way they should be done is by marking the question as community wiki so that everyone can answer in one place instead of having hundreds of different answers with individual names in them.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#106"/>
        <Literal>2015-02-17T01:12:12.230</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#106"/>
        <Literal>102</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#106"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#107"/>
        <Literal>I dabbled some.

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#107"/>
        <Literal>2015-02-17T05:03:13.383</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#107"/>
        <Literal>97</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#107"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#108"/>
        <Literal>Can I ask questions associated with caffeine, like what are different sources of caffeine?
Or that kind of questions are off-topic?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#108"/>
        <Literal>2015-02-17T11:08:53.183</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#108"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#108"/>
        <Literal>Can I ask questions just about caffeine?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#109"/>
        <Literal>It depends really. Caffeine is many things. It is a chemical. It is a psychoactive drug. It is a taste. It is a component of coffee, tea and other drinks.
If you&apos;ve got a question about caffeine, have a think about what context you&apos;re asking it in, and who might be able to answer. Would a chemist be the type of person who might know the answer? Take it over to Chemistry.SE. 
If it&apos;s a direct health question (related to caffeine in general and not specifically coffee - which contains other chemicals that have other effects), this might not be the right place.
Your example &quot;What are different sources of caffeine?&quot; is a bad question for SE in general, as it&apos;s kinda open ended and the answer would just be a big list. Even questions like &quot;What plants produce caffeine?&quot; might do better on Gardening.SE.
If your question is about caffeine in relation to coffee in any way, it&apos;s probably on topic though.
It&apos;s still early days, we&apos;ve got a long way to go in terms of finding and testing the limits of our scope. If you&apos;re not sure, post anyway. It&apos;s much better to discuss actual questions than hash imaginary ones out on meta :-)
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#109"/>
        <Literal>2015-02-17T11:53:55.993</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#109"/>
        <Literal>108</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#109"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#11"/>
        <Literal>&apos;The coffee-mill&apos; - grinding ourselves a coffee here 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#11"/>
        <Literal>2015-01-27T22:56:05.857</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#11"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#11"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1108"/>
        <Literal>Since there wasn&apos;t a nomination post, I think it&apos;d be nice if we introduce ourselves.
I&apos;m fredley, I&apos;ve been a mod on Arqade for a year already, and a member of Stack Exchange for nearly five years. I live and work in London, and my office currently has no coffee making facilities in it at all :-(



At home, I make my coffee with my trusty Bialetti moka pot, but I&apos;ve had espresso machines in the past and hope to have another soon.
When it comes to moderation, I&apos;m a quality fanatic - I will edit a lot, but do call me out if you think I&apos;ve gone too far. During waking hours (GMT) I&apos;m usually hailable in chat.
In terms of growing the community, I believe if we can create great content, people will find us, and if we&apos;re welcoming they&apos;ll stay. If we can keep it up for the next few months as the beta proceeds, I don&apos;t see why we can&apos;t carry this site to graduation and beyond!

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1108"/>
        <Literal>2015-02-17T13:46:24.933</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1108"/>
        <Literal>103</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1108"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1109"/>
        <Literal>An adjunct to @fredley&apos;s answer: You can ask questions associated with coffee.
The tour sums it in the first sentence:

Coffee Stack Exchange is a question and answer site for people interested in all aspects of producing and consuming coffee. 

That&apos;s it.  If your question doesn&apos;t involve producing or consuming coffee, it&apos;s questionable.  Though coffee (does, generally) happen to contain caffeine, caffeine (itself) is not the topic of the site. Some other examples: Cola is off-topic, even though the beverage has a similar color. Tea is off-topic (see also original discussion), even though it has other similarities. Questions that discuss coffee, and happen to mention other topics (e.g., tea or cola) are fine -- if they discuss coffee as their primary topic.
That said, we do need to put some content at the help/on-topic page.  This is the canonical location for detailed information about what is on-topic at a given site; it&apos;s shortcut-linkable in comments from [help/on-topic].
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1109"/>
        <Literal>2015-02-17T14:08:37.097</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1109"/>
        <Literal>108</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1109"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1110"/>
        <Literal>I shall follow suit!
I&apos;m hoc_age, and I like coffee and Science. I enjoy learning and understanding the nature of the (coffee) universe; to that end, I like explanations that have a basis in demonstrable fact  (though not exclusively :). I experiment with different coffee preparation and enjoyment methods as a vehicle. I also like cooking (and Science) and contribute to Seasoned Advice. I have a tendency to be pedantic and verbose, but I also try to be conscientious and receptive: if you don&apos;t like what I say or how I say it, please tell me! 
More broadly, I&apos;m a relatively new &quot;active&quot; user (~1 year) to Stack Exchange. I am a huge proponent of the learning-based approach to Stack Exchange, and am a big believer in effort and engagement in a community. I wish I could wear my &quot;Warm Welcome&quot; hat year &apos;round. See my original meta-missive for more of my philosophy. 
I&apos;m rarely the FGITW, so I (try to...) try to take the opposite approach: make a smaller number of higher-quality posts. I originally heard this philosophy as pertains to scientific papers; the original author was lamenting (a perception) that scientists were trying to write as many papers as possible, as quickly as possible (for any number of perceived reasons: funding, relevance, legitimacy, pressure, e-peen, ...) I.e., without as much regard for their content, quality, or profoundness. SE is structured to enhance and enforce quality. Let&apos;s make this the best coffee-site possible!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1110"/>
        <Literal>2015-02-17T15:37:53.617</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1110"/>
        <Literal>103</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1110"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1112"/>
        <Literal>I am not trying to be greedy here. I have answer this [question][1] long ago (probably during private beta). It had 150 rep as a bounty by Nathan and it was never awarded in during the seven day period. The grace period has past by and this is suppose to happen according to the bounty section in the Help Center:

If you do not award the bounty within 24 hours of the bounty period ending, half the bounty value will be automatically awarded to the top voted answer posted after the bounty start, provided it has a score of at least 2. If no new answer matches this requirement, no reputation will be awarded at all, and the reputation used on the bounty will be lost forever.

Please notice this part for specificly:

If you do not award the bounty within 24 hours of the bounty period ending, half the bounty value will be automatically awarded to the top voted answer posted after the bounty start, provided it has a score of at least 2.

I have the current highest voted answer with a score of +8 yet I didn&apos;t get any of the rep (75 to be exact). The half-bounty was actually awarded to therewillbecoffee&apos;s answer instead. That answer has a score of +5 at the moment. So my question is why didn&apos;t I get any of the 75 rep? My answer has matched all the requirements listed, so I don&apos;t quite understand. Did the OP manually award it? 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1112"/>
        <Literal>2015-02-17T23:26:05.253</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1112"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1112"/>
        <Literal>How Come I Didn&apos;t Get The Half-Bounty</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1113"/>
        <Literal>Yay — my power&apos;s back on! After a day in the dark, I can finally introduce myself.
I&apos;m Sam; some of you may already know me from other sites in the SE network. I&apos;ve also got the diamond over on Tor.SE, and occasionally go on ask/answer binges over at TeX.SE. I currently hail from Atlanta, GA (but not for long as I&apos;m moving to Austin, TX this very weekend to start a new job in software engineering).
I have a french press and espresso machine sitting on my desk at all times (and a tea kettle on the stove heating up water for the french press, of course), and generally prefer my coffee black. My favorite roasts are Batdorf &amp; Bronson&apos;s &quot;Dancing Goats&quot; (makes a seriously good cup of espresso) and anything from the Atlanta Coffee Roasters in the press pot or on drip (I used to practically live in their store-front / coffee shop back when I worked from home). I also recently did a thru-hike of the Appalachian trail, where I learned that it&apos;s always possible to make cowboy coffee in the woods if you try hard enough.
I&apos;m looking forward to working with you all to build a great community.



</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1113"/>
        <Literal>2015-02-18T00:15:40.373</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1113"/>
        <Literal>103</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1113"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1114"/>
        <Literal>
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1114"/>
        <Literal>2015-02-18T10:43:01.653</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1114"/>
        <Literal>97</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1114"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1115"/>
        <Literal>If I recall correctly, I believe you answered the question before Nathan added the bounty. I know that @therewillbecoffee answered after you did.
I think the SE thought process is as follows. If a user attaches a bounty it is because they are not convinced with any of the existing answers. Thus, if the user who added the bounty never awards it, the partial award goes to the best answer that came after the bounty was created.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1115"/>
        <Literal>2015-02-18T13:23:48.530</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1115"/>
        <Literal>1112</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1115"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1116"/>
        <Literal>How about coffee beans with a magnifying glass? This could connote the metaphor of examining coffee more closely. Here&apos;s an example from Shutterstock of what I&apos;m talking about, because I&apos;m not much of a photographer.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1116"/>
        <Literal>2015-02-18T20:22:50.053</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1116"/>
        <Literal>97</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1116"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1117"/>
        <Literal>Some SE sites have a community blag — do we have one yet that we could start publishing on? Do we have to wait until we&apos;re out of beta for it or something?
Many of our users have valuable stories they might like to share, and often do, about their experiences with coffee, especially from stuff they&apos;ve found on this site! It might be valuable to make the community blog available for people to share stuff independent of any need to answer a question.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1117"/>
        <Literal>2015-02-18T20:31:30.993</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1117"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1117"/>
        <Literal>Do we have a blog? (If not, when do we get it?)</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1118"/>
        <Literal>No, and never, I&apos;m afraid. This doesn&apos;t mean we can&apos;t have an unofficial one, or start a community on Medium or something equivalent. It would be good to discuss what the community thinks we should do (if anything) on social media! 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1118"/>
        <Literal>2015-02-18T21:04:56.373</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1118"/>
        <Literal>1117</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1118"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1119"/>
        <Literal>I personally think that moderators should have a fun way to introducing our new users to Coffee.SE. Seriously, it is getting old with this similar phrase:

Welcome to Coffee.SE! Please remember to take the tour and earn your next badge of honor! Please take a quick visit to the Help Center to help improve the quality of future your posts.

Lots of mods use a similar phrase to introduce new users on whatever SE site they are on 
(Sam Whited, you know what I mean :-) ). It starts to get old, then boring, and finally just plain annoying. New users should receive a warm, meaningful welcome, not a robotic-like message implied to every new user. My question is, how should the Coffee Mods introduce our new users in a warm, friendly way without using the same message again and again? All suggestions are appreciated and don&apos;t be afraid to share your idea?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1119"/>
        <Literal>2015-02-20T02:07:25.220</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1119"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1119"/>
        <Literal>How Should A Coffee Moderator Introduce A New User</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1120"/>
        <Literal>First off, a defense of messages like that one. Keep in mind that the welcome isn&apos;t for us, it&apos;s for the new user. Even if the same welcome message has been posted plenty of times and you&apos;re tired of it, it&apos;s the first time they&apos;ve seen it - that&apos;s why they&apos;re being welcomed! So it doesn&apos;t seem nearly so robotic to them as to you.
Also, while making them feel welcomed is half the goal, letting them know about the ground rules is really important too. A lot of people expect discussion forums, and are really confused by the way StackExchange sites work the first time they visit. They post not-really-answers, they take downvotes personally, and so on. Pointing them to the tour/help at the first opportunity is an attempt to avoid this.
So in my mind, the canned messages are fine. I might tweak the one you quoted a bit, but there&apos;s nothing wrong with something along those lines. If I wanted to go beyond that, I&apos;d simply to throw in a specific comment as well - something very simple that I liked about their post, or a suggestion for improving it. But that&apos;s not always too easy, and I don&apos;t think there&apos;s anything wrong with just using the template.

That said, if you want more variety, why not just welcome them yourself?
The moderators don&apos;t own the site. Their primary job is to do the things that no one else can. This early in a beta, there&apos;s a little more in that category since there are fewer high-reputation users. But welcoming a new user? All you need to be able to do is comment.
So if you want to contribute some variety, go for it. A variety of users doing the welcoming is perhaps even more meaningful than a variety of messages: it demonstrates that the site is a community site, not one kept carefully under the control of a few moderators. Just keep in mind why you&apos;re doing it: to make them feel welcome, yes, but also to help them learn how the site works so they can make good contributions.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1120"/>
        <Literal>2015-02-20T02:27:11.800</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1120"/>
        <Literal>1119</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1120"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1121"/>
        <Literal>A lot of sites have a special motto. It is usually funny, interesting and catchy. I think we should have a catchy motto too. So what do you think our motto should be? Make it as awesome, catchy, and more interesting as you can! All ideas are okay!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1121"/>
        <Literal>2015-02-21T14:14:43.257</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1121"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1121"/>
        <Literal>What should be our motto?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1122"/>
        <Literal>A few thoughts: 

Coffee.SE: overthinking coffee since 2015.
Where real coffee nerds learn about real coffee.
Coffee + Science: FUN
Serious coffee questions need serious answers.

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1122"/>
        <Literal>2015-02-21T19:54:32.503</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1122"/>
        <Literal>1121</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1122"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1123"/>
        <Literal>I have a few suggestions:

Serving Coffee and Knowledge Since 2015
Coffee.SE - Official Q/A for Coffee-ers!
Coffee + Knowledge = Coffee.SE

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1123"/>
        <Literal>2015-02-21T23:48:52.507</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1123"/>
        <Literal>1121</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1123"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1125"/>
        <Literal>No, no question should not have that tag.
It is weird having that tag when the site itself is about coffee. It&apos;s not an factor or aspect of coffee, it is coffee. Having &quot;coffee&quot; is probably not acceptable. If you can&apos;t find the tag you need, get to 125 rep and make a new one.
Like the others, people can include coffee in their tags for more detail. I&apos;m perfectly fine with that and so are the mods.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1125"/>
        <Literal>2015-02-25T01:02:52.283</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1125"/>
        <Literal>80</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1125"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1126"/>
        <Literal>I recently got 2 rep for having an approved edit on the &quot;flavor&quot; badge as shown here:
+10  Are there any disadvantages to shade grown coffee?
+10  How hot should the water be for instant coffee?
+2   flavor tag wiki
+2   brewing-process tag wiki

So I checked the tag out and hoped to see my edit shown on the flavor badge. Then I found this weird quote when I clicked the &quot;flavor&quot; tag:

The flavor tag has no wiki summary, can you help us create it?

What?! I just got an approved edit and it says there has been no edit or current summary.I clicked on it and it shows a piece of my summary (okay, not, hoc_age also edited this one plus brewing-process). Why isn&apos;t the tag summary for flavor showing properly? The brewing-process wiki (which I edited) was approved and is visible:
The process of brewing coffee, hot or cold. (hoc_age edited it so it is shorter than my original) 

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1126"/>
        <Literal>2015-02-25T01:07:08.577</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1126"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1126"/>
        <Literal>Where&apos;s The Tag Wiki for Flavor?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1127"/>
        <Literal>You suggested content/edit for the flavor tag wiki, but it looks like you did not suggest content/edit for the flavor tag wiki excerpt. That&apos;s the reason that there was no content there: no one had yet put any content in the excerpt.  There are two different fields for the tag wiki: one for the &quot;excerpt&quot; (short version) and one for the main tag wiki.
Looking at the history of the universe, it looks like you suggested tag wiki edits to the following:

temperature tag wiki
temperature tag wiki excerpt
brewing-process tag wiki
brewing-process tag wiki excerpt
bean-varieties tag wiki
bean-varieties tag wiki excerpt
flavor tag wiki

I.e., you suggested an edit to the &quot;flavor tag wiki&quot;, but you did not submit a suggested edit for the &quot;flavor tag wiki excerpt.&quot; I put in a placeholder for the &quot;flavor tag wiki excerpt&quot;; feel free to suggest an edit if you&apos;d like.
I think everyone can view the history of the tag wikis and excerpts; see the flavor tag wiki excerpt history here.
Thank you for proposing content for the tag wikis!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1127"/>
        <Literal>2015-02-25T02:23:08.233</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1127"/>
        <Literal>1126</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1127"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1128"/>
        <Literal>This question is spurred by a recent question on the main site: Why does some coffee &quot;hit me&quot; harder than other coffee?
The original (see the history) was specifically about one brand; it received several close-votes for &quot;opinion-based&quot; reason.
I edited the question in an attempt to make it &quot;more objective&quot; -- e.g., what affects coffee&apos;s stimulation? I provided an answer about the tangible aspects of caffeine, which turned out to be more of a survey, predominantly with links to other questions about factors that affect caffeine content in coffee.  The question was closed, but it has now received re-open votes, so it looks like we have disagreement (at least in part, a good thing)!
Such &quot;survey&quot; questions and answers are not always on-topic, and are often controversial (another example is this question of mine from Stack Overflow, in which I summarized a handful of other questions). That question was closed and subsequently re-opened, meaning that it probably received several close- and open-votes.
I happen to (personally) appreciate those kind of question/answer when appropriate; I value them as an index and summary of several questions, often comparisons of (or distinguishing between) questions within a certain tag.
To the extent that this represents an example of a &quot;survey of other questions&quot; answer: Are such &quot;survey&quot; answers (and the related question) reasonable? Or should such questions be discouraged, and limit to more narrow, on-point questions about a similar topic?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1128"/>
        <Literal>2015-03-03T14:43:49.033</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1128"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1128"/>
        <Literal>Do we allow summary-like questions and answers?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1129"/>
        <Literal>tldr; keep it case by case, let the community decide.
I can&apos;t speak for everyone but I gave one of the initial close votes and also gave the first re-open vote.
I felt that in this case your edit accomplished two things. It played down company brands in the question and made it answerable. I may have also had the bias of wanting to not reject someone&apos;s first question to the site if it could be saved.
That said, I can see problems with opening the door to all &quot;summary-like&quot; questions, many of which may instead belong as wikis or just good chat discussions. Instead I think we just need to weigh each question as it comes in. Maybe eventually we&apos;ll have a list specifically for coffee.se to show which borderline questions survive and which don&apos;t.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1129"/>
        <Literal>2015-03-03T17:45:29.563</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1129"/>
        <Literal>1128</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1129"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1130"/>
        <Literal>Keep calm and drink coffee

Original image here.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1130"/>
        <Literal>2015-03-03T21:39:13.010</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1130"/>
        <Literal>1121</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1130"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1131"/>
        <Literal>Setting aside the &quot;primarily opinion based&quot; reason to close Questions, the concern raised by &quot;summary-like&quot; questions is a potential need to manage a set of nearly-duplicate Questions, varying only in minor details but all asking essentially the same thing.  Joel had an early blog post about this.
At Math.SE we might treat these as &quot;abstract duplicates&quot;, and a list of them, List of Generalizations of Common Questions is maintained on meta.  
For example, we get a lot of posts asking things very similar to: why is 1+2+3+... = -1/12?  (It makes a little more sense than one might suspect at first glance.)  Rather than run through the basics each time, it was thought expedient to have one well-answered post of this kind and then be able to refer new Questions to that one as an &quot;abstract duplicate&quot;.
Something of the kind seems to be in the spirit of &quot;summary-like&quot; questions.  Although it is early days, we might see such repetitive trends emerging.  If so, I&apos;d recommend keeping track of those with a meta thread, so that finding those &quot;canonical&quot; answers can be easy enough (and it would admit some discussion on meta whether a topic deserves &quot;summary&quot; treatment).
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1131"/>
        <Literal>2015-03-05T16:30:26.660</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1131"/>
        <Literal>1128</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1131"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1132"/>
        <Literal>Yesterday I asked in the main site this question:
https://coffee.stackexchange.com/q/1724/157
and was almost immediately flagged as off-topic because of being a &quot;product recommendation&quot; one.
Even in the case that such a question indeed is a &quot;product recommendation question&quot;, I think it relates to this answer:
https://coffee.meta.stackexchange.com/a/38/157
in the sense that my question points specifically to a very unique kind of coffee, one that is produced just in a limited region of the planet, and since its features are very special, I really don&apos;t think that a plethora of answers will be received, and is very likely that the one or two that may appear will all point towards the same direction.
Said all this, I expect the opinion of the community, in order to keep the question open or close it right away.

Finally, I made a new question.
Well, I&apos;ve just rephrased the question with a new one, following @hoc_age recommendations:
What does Kopi Luwak taste like?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1132"/>
        <Literal>2015-04-11T02:59:36.357</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1132"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1132"/>
        <Literal>Asking for an alternative for Kopi Luwak was flagged as off-topic</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1133"/>
        <Literal>My take on this is that the &quot;product recommendation&quot; might be a little misleading. Let&apos;s focus instead about what you&apos;re really asking, and what type of answer you&apos;re looking for. It seems that there&apos;s quite a bit of interest in the topic of Kopi Luwak, because there are several questions about it and much discussion. I think there&apos;s a lot of room for interesting Q&amp;A related to this topic!
Fundamentally, what&apos;s your question or what are you trying to solve? From your initial question, it sounds like...

you have never tried Kopi Luwak;
you don&apos;t know how it tastes,
you are unable or unwilling to try it;
you are looking for an alternative.

Are any of those a more fundamental question that you have?  How about changing the question to, &quot;What does Kopi Luwak taste like?&quot; Then you can also ask in the body of the question, or infer from the answer, &quot;What other coffees taste like it?&quot;  Though similar in concept, I think &quot;how does it taste&quot; comes across better.  What do you think? I&apos;d be happy to re-articulate the question with you, or un-lock it if you change it around.  For example:

What does Kopi Luwak taste like?
I have never had the opportunity to try Kopi Luwak, but I&apos;d like to know how it tastes. How is does the taste differ from more traditionally processed coffee from the same region? Are there other coffees that have similar tasting notes?

Or something like that. That said, this answer says Kopi Luwak is delicious, and has some descriptions, but there&apos;s probably room for another question on the topic.
Another question might be something more like &quot;Why does Kopi Luwak taste different?&quot; For example, what is it about the Kopi Luwak digestion process that changes the beans? What happens to the beans during digestion (e.g., protein digestion)?
There might also be room for a question about Black Ivory Coffee, which is apparently coffee digestively &quot;processed&quot; in a similar way by rescued elephants.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1133"/>
        <Literal>2015-04-15T14:20:39.447</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1133"/>
        <Literal>1132</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1133"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1134"/>
        <Literal>Okay, Coffee beta-ers! We&apos;re 75 days into beta. How are we doing?
According to the Coffee Beta Stats on Area51, certain things are not looking good:

Need more questions!  &quot;Healthy&quot; is about 10 questions per day; we average less than 2.
Need more users!  &quot;Healthy&quot; is over 1000 visits per day. We have about 85 visits per day, which I think means unique users/IP-addresses.

How can we get more participation?
Edit: As @RobertCartiano points out in comments, there&apos;s nothing special about the upcoming 90-day threshold, it&apos;s just how the stats happen to be listed/pegged-against in Area51. Thanks very much for the link -- an excellent read. Nonetheless, it still seems like a good time-frame to check up to see if we could encourage more participation. Or will it simply take more time for a niche site like this?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1134"/>
        <Literal>2015-04-15T15:18:58.147</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1134"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1134"/>
        <Literal>How do we get more participation?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1135"/>
        <Literal>I&apos;ve seen other sites have some success via regular events, e.g. World Building or Code Reviews.
Alternatively we can cross our fingers and hope for a major new coffee product, for which we can quickly position ourselves as the de-facto help resource, but that seems like wishful thinking.
However if one does come about (or some other, similarly major coffee-related event occurs), then we should be sure to position ourselves as the best resource out there by quickly producing a comprehensive set of questions and answers on all facets of the new subject.
One thing to note is that more questions will tend to lead to more users, and vice versa, as more questions lead more people to the site via google and more users post more questions.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1135"/>
        <Literal>2015-04-23T14:54:29.663</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1135"/>
        <Literal>1134</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1135"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1136"/>
        <Literal>I think we need to encourage more product specific questions. I think we&apos;re losing questions where users want to ask a question relating to their specific set up, whether it be machine, or grinder or other coffee making equipment. The questions we have already have on brewing methods etc are great, but take a look at any other successful coffee site and you&apos;ll see 9/10 times they&apos;re split into sub sections on machine manufacturer as well as different brewing methods.
For example, we can&apos;t just lump all &apos;espresso&apos; questions together and discourage questions which want to know the specifics on one machine/brand. An entry level £50 espresso machine is a whole different ball game to one costing £1000+, and believe me people who are into their coffee will drop that kind of money easily, and will want answers on their specific set up.
This is just my opinion, but I have been put off asking questions I&apos;ve had because they&apos;re very much related to my machine and grinder set up. I think more questions on specific machines would get more search engine hits and therefore grow the site quicker.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1136"/>
        <Literal>2015-04-27T13:49:31.280</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1136"/>
        <Literal>1134</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1136"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1137"/>
        <Literal>Coffee SE - Jittery with knowledge
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1137"/>
        <Literal>2015-05-06T11:31:04.670</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1137"/>
        <Literal>1121</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1137"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1138"/>
        <Literal>Australian coffee shops have been taking to stocking their own Keepcups in recent years, often marked with the coffee shop&apos;s brand. For those unaware — I don&apos;t know what their presence is like outside Australia — this is a Melbourne-based company that produces reusable coffee cups in glass or plastic, like this one:

I have some questions about my own keepcup and maintaining it. This isn&apos;t about coffee itself, but this is intimately a coffee product, and I&apos;m going to find my expertise on keepcups within the coffee drinker world.
Do questions about Keepcups fit here, or not?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1138"/>
        <Literal>2015-05-14T02:19:34.513</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1138"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1138"/>
        <Literal>Can I ask about Keepcups here?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1139"/>
        <Literal>I&apos;m thinking questions such as:
What is Kopi Luwak?
How do I make a Cappuccino?
Simple questions that might not even be asked by the user base until the site has grown a little, but might bring in more beginners.
Thoughts?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1139"/>
        <Literal>2015-05-14T08:36:07.627</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1139"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1139"/>
        <Literal>Should we produce canonical community wiki questions and answers for basic topics?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1140"/>
        <Literal>I would say yes, since they are intrinsically related to coffee, and would be a useful addition to a repository of coffee knowledge.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1140"/>
        <Literal>2015-05-14T08:36:56.437</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1140"/>
        <Literal>1138</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1140"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1141"/>
        <Literal>Yes, if you use it in conjunction with storing, brewing or consuming coffee - I think it&apos;s on-topic. I&apos;ve got some porcelain stuff I&apos;d love to get coffee stains out of, and intend to ask about that as soon as I find some time. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1141"/>
        <Literal>2015-05-14T11:56:52.730</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1141"/>
        <Literal>1138</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1141"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1142"/>
        <Literal>I haven&apos;t seen that many duplicates; canonical questions are really the answer to that. By taking an existing question / answer and putting everything someone would want to know about a frequently searched question, you can obviate the need for people to continue to ask. But they do, which is why duplicates asked just a tad differently all pointing to the canonical work so well. 
I don&apos;t think we have the problem yet, even though I&apos;m wondering how much ground we haven&apos;t covered on the topic :P
End of anything official in this response.
What I&apos;ve been kicking around is the idea of self-answered questions about my own gear, e.g. &quot;How easy is the Breville Barista Express to operate?&quot; or &quot;how long does the niju-glass double-walled press hold a constant temp?&quot; where I&apos;d just write about my experience with owning and using this stuff. I&apos;d definitely be interested in someone from this community talking about a La Marzocco Linea Mini.
This serves a big piece of what people look for in a site like this, should I spend my hard earned cash on [thing]?. It also unlocks a lot of additional content for us. It&apos;s not &apos;shopping&apos;, or &apos;what should I buy&apos; - it&apos;s &quot;I have this thing and have useful information to share about it&quot;. It just has to be shared in the form of a question. 
I don&apos;t know. I haven&apos;t given it a lot of thought, I mention it only because signs that folks are getting a bit bored are starting to emerge :)
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1142"/>
        <Literal>2015-05-14T12:15:06.060</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1142"/>
        <Literal>1139</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1142"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1143"/>
        <Literal>I like the question and was thinking more on it... so I decided to expand on part of my comment on the question into this answer.
My first thought with most of these is, &quot;What have other Stack Exchange sites done in this situation?&quot; I wrote a meta-question about a somewhat-similar topic of summary-like questions. I especially liked this answer from hardmath about how Math.SE handles some of those &quot;canonical&quot; topics.(Aside: His particular example is fasinating and blew my mind. :)
I think there&apos;s value in letting good answers to such topics &quot;happen organically,&quot; even though that&apos;s somewhat less satisfying in certain ways than getting some good, fundamental answer to some good, fundamental question committed into the annals of the Internet(s). That said, I saw some confusion (partly my own) about a topic, so I wrote a self-Q/A about What do the terms extraction and strength mean? My goal there was to clear up some terms that I didn&apos;t understand and that were being used somewhat inconsistently or imprecisely. Especially in those cases, I&apos;m certainly in favor of penning a good Q/A.
On the other hand, I think having some &quot;softball&quot; questions every once in a while, even if duplicate, is healthy. If a new user to the site gets hooked by giving a solid answer to a question, that&apos;s a great &quot;gateway&quot; to this community. Having fundamental topics that are &quot;still open&quot; might be a good hook for a new user.
Another take on this is that some questions that are on-topic for the site might be already answered well other places. For example, if I search for how to make a cup of coffee in an auto-drip coffeemaker, I think I&apos;d find a very large number of answers that are very adequate... therefore, they don&apos;t need to be &quot;asked&quot; here as such. That said, I&apos;d be totally happy if someone earnestly asked something like that and got an earnest, helpful answer from this community. I hope we will be so lucky as to be &quot;the&quot; coffee reference site at some point in the future! :)
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1143"/>
        <Literal>2015-05-18T01:30:45.453</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1143"/>
        <Literal>1139</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1143"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1144"/>
        <Literal>The following question is under review for being closed as too broad.
Here&apos;s the question: Coffee on daily basis
I would like to know what the community thinks about this. Is it too broad, or not?
Also this question has a poor format in my opinion. Here is how I believe it should be structured:

Ask if coffee on a daily basis is healthy or not.
Based on that result, ask why or why not it is healthy or unhealthy.

(Which still may be quite broad)
I am interested to know the community&apos;s opinion on this.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1144"/>
        <Literal>2015-05-20T12:00:37.647</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1144"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1144"/>
        <Literal>I&apos;m on the fence about closing this question for the reason &quot;too broad&quot;</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1145"/>
        <Literal>I&apos;ve seen other sites have some success drawing in and retaining users via regular community challenge events, e.g. World Building or Code Review.
Since our participation is waning, should we consider doing something similar?
For those not in the know, a community challenge works like this:


Users suggest various topics or themes. For example, on Earth Science, suggestions have included antarctic and volcanology.
Everyone else upvotes topics or themes they like.
Each week, the highest-voted suggestion becomes the weekly topic challenge. A meta post is written up giving a brief summary of the
  idea (with the featured tag, hopefully), and at the end of the week,
  users who asked or answered one or more questions about that topic are
  recognized.
Repeat until everyone gets tired of the idea or everyone runs out of suggestions.


Should we have these challenges, how often should we have them, and who should be in charge of them?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1145"/>
        <Literal>2015-05-21T10:58:11.573</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1145"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1145"/>
        <Literal>Should we have Community Challenges?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1146"/>
        <Literal>I recently asked this question about how to know what type of coffee to use in a recipe, and how to be able to tell whether the difference will be tasted in the final result. I happened to give a specific recipe example because I was concerned that the question would be too broad without it.
I read Should questions about recipes involving coffee be considered off topic? before posting my answer and I was satisfied that my question was on-topic.
Notably:


Coffee is a common ingredient in many popular deserts, and fits well here, as long as the &apos;gist&apos; requires knowledge of not just cooking, but also coffee in order to answer.

If a question is on-topic on multiple sites, SE guidelines are that it can be posted on any of them. A question should only be migrated if it is definitely off-topic on the site it is on.

However, my question got migrated to Seasoned Advice. Why? Was it because I provided a specific recipe instead of asking for a general approach? In my opinion my question could have been asked on either site, but I posted it here because I specifically wanted coffee expertise about how to prepare the coffee to use in the recipe, and how to determine what type to use. I know a fair bit about cooking, but I know very little about coffee. Is there any way I could have worded my quesion better to keep it on topic?
Most importantly, why didn&apos;t I get a chance to edit it into shape before wham bam migration modhammer?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1146"/>
        <Literal>2015-06-01T20:18:25.330</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1146"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1146"/>
        <Literal>Why was this question migrated without discussion?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1147"/>
        <Literal>I wasn&apos;t the one who migrated it, so I can&apos;t really give an authoritative answer. I do think an explanatory comment would&apos;ve been helpful, for sure. I also think the question is a better fit for cooking, but perhaps it&apos;d have been best to do nothing; usually we don&apos;t migrate questions that seem to be on the boundary between site scopes, and this question is definitely on the boundary.
The rest of the answer discusses why I think it&apos;s a better fit on cooking, but do keep in mind I think it&apos;d have been fine not to migrate too!

The key point in my mind is also made in the other meta question you linked to:

If it&apos;s more about cooking components, or cooking technique, then it&apos;s probably one for Seasoned Advice.

You say you wanted coffee expertise. But the question is about using coffee in a recipe, i.e. in the context of cooking. You&apos;re asking about one ingredient as part of a whole, about the combination of non-coffee flavors with other ingredients. People who are experts in making coffee are not necessarily experts in all of that, but people who are experts in cooking will know about how to use all kinds of ingredients, including coffee. It seems like a question that, despite your initial guess, is more about cooking than it is about coffee.
So I&apos;m not sure exactly how you&apos;d shape it up to make it more clearly seek coffee expertise. Coffee expertise will get you great answers about how much the flavor of different kinds of coffee differs, but not much about how obvious that&apos;ll be in the context of a tiramisu recipe. What were you trying to ask that cooking folks can&apos;t tell you?
Moreover, I&apos;m not sure I&apos;d make it a goal to keep it on coffee; it&apos;s not like it suffered because of the migration. When you&apos;re asking a question, the goal isn&apos;t to make sure it&apos;s on a particular site, it&apos;s just to get the best answers possible. I missed this when it showed up on cooking, but I think most likely the reason this didn&apos;t get any answers beyond the one that was migrated with it is that it&apos;s a pretty general question with a general answer, so it&apos;s hard to really give a more specific expert answer.  (If it hadn&apos;t had that answer, you would doubtless have quickly gotten an answer on cooking, and been just as satisfied.) Nonetheless, I&apos;ve added a few more thoughts!
Finally, to emphasize, I think it&apos;d have been reasonable to err on the side of doing nothing,  leave here, since you posted it here.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1147"/>
        <Literal>2015-06-10T02:08:12.183</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1147"/>
        <Literal>1146</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1147"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1148"/>
        <Literal>everybody!
I&apos;m Nick, I&apos;m new, and I love coffee, something that probably earns me the badge of &quot;traitor&quot; in my tea-loving home-nation of Britain. When it comes to coffee-related knowledge though, I&apos;m a complete beginner, so expect me to be doing more asking than answering around here.
I&apos;m a scientist and programmer by day, and an independent game developer by night. If there are any occupations fuelled more by caffeine than those, let me know so I can add them to my CV.
I&apos;m active on StackOverflow and especially CodeReview, and I&apos;m very proud to call this wonderful site home. You can also find me sticking my oar in where it&apos;s not wanted over on various Area51 proposals.
I prefer my coffees milky and frothy, but I&apos;m slowly coming around to richer, stronger flavours. Who knows, maybe you&apos;ll make a black coffee drinker out of me yet!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1148"/>
        <Literal>2015-06-17T08:20:38.887</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1148"/>
        <Literal>103</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1148"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1149"/>
        <Literal>Yes, we should have challenges.
Throwing my own oar in to suggest that yes, community challenges have a tendency to drive up participation, and help round out our knowledge base.
As a newly minted moderator, I would be happy to take charge on this and organize the challenges, however if the community believes somebody else would be better for the job, I don&apos;t mind handing over the reigns either.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1149"/>
        <Literal>2015-06-17T08:30:07.677</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1149"/>
        <Literal>1145</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1149"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1150"/>
        <Literal>I contributed many example questions and discussions to the previous (failed) Area51 proposal for a Coffee site a few years ago. And I didn&apos;t even know about this one until seeing it on the SE dropdown menu yesterday!
So, bluntly, what did you guys do right the we did wrong? And how come you didn&apos;t (or, why don&apos;t we go and ...) invite old committers from previous proposals?
The last proposal seemed to die when it was discovered that Coffee issues are all on-topic at Seasoned Advice. How did you guys jump that hurdle??
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1150"/>
        <Literal>2015-06-21T19:46:05.747</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1150"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1150"/>
        <Literal>Where did this site come from?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1151"/>
        <Literal>There is a general trend away from CW, and my meta participation in meta.music.SE illustrates how I&apos;ve learned this the hard way. But it does seem like CW&apos;s greatest feature is it greatest failure: no reputation points for participants.
This is particularly unappealing if you&apos;re writing something intending it to be a &quot;canonical&quot; answer. Yes, you may need help on some details. But the work you put into it should be rewarded.
Even on codegolf.SE where it used to be the policy that &quot;tips&quot; questions should be CW because they&apos;re not proper code challenges. When they changed it, removed all CW, and everybody started getting points ... nobody&apos;s complaining.
In short, Yes! Write canonical answers. You can even write a fictitious question to lead-in to it. Share your knowledge. And enjoy the appreciation of your readers.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1151"/>
        <Literal>2015-06-22T22:30:02.573</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1151"/>
        <Literal>1139</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1151"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1152"/>
        <Literal>
The text below is the opinion of the answerer. Please don&apos;t read if
you&apos;re allergic to opinions.

My suggestions: 

Where coffee and questions meet (A bit misleading?)
No, we do not serve decaf. (Too funny?)
For coffee addicts who want points

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1152"/>
        <Literal>2015-07-15T17:00:22.233</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1152"/>
        <Literal>1121</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1152"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1153"/>
        <Literal>I think getting more basic questions may help.  I was looking through the site today and besides what I perceive to be very few questions about home roasting, there are very few basic questions.  
I know there was another meta question regarding this, but it sort of swayed back to another idea.  I think coffee.sx is going to get much more traffic from answers to questions like &quot;What is esspresso?&quot; that some of the more specialized (but still completely legitimate) questions currently out there.  
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1153"/>
        <Literal>2015-07-24T17:50:27.777</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1153"/>
        <Literal>1134</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1153"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1154"/>
        <Literal>Though I do think it&apos;s good to post a question at the site where it&apos;s most on-topic, there is an official(-ish) &quot;policy on migration, at this answer to the Meta question on migration.
I recently had a bit of a discussion with the mods over at Seasoned Advice about this question about a coffeemaker. It was posted and had zero votes, zero answers, and zero other comments when I suggested that it get migrated over to here at Coffee. I got push-back from my comments and ended up chatting with her (SA mod) in Chat. Her perspective was very by-the-book (i.e., the aforementioned meta) that says 

We only migrate questions because they are off-topic on the original site. It is perfectly possible for a question to be on-topic on multiple sites, but that is not a reason to migrate it elsewhere. As a general rule, if someone asks a question here, and it&apos;s on-topic here, it should stay here.&quot;

(My emphasis added). I was hoping, due to context, that they&apos;d be willing to migrate this very on-point Coffee question to Coffee.SE -- nope. I disagree in this particular case, but she&apos;s a mod there and I&apos;ll respect her adherence to policy and conviction!
That said, migration should be &quot;uncommon&quot;. To OP&apos;s point, I think the question in question should remain here. The Coffeemaker question, I think, should have been migrated here. This may sound relativist, but we&apos;re young and can use on-point questions such as that.
My opinion: If you, as an OP...

are posting a question that is on-topic at multiple sites, and
are aware of both sites, and 
choose to post it at site A instead of other sites (as @starsplusplus did in this case),

then I maintain that it should not be migrated. If any of these assumptions are missing (e.g., OP likely doesn&apos;t know about other more-on-topic site) then it&apos;s up for discussion.
The hoc_age doctrine: &quot;If the question involves coffee, ask it at Coffee.SE!&quot;
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1154"/>
        <Literal>2015-07-30T15:10:34.817</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1154"/>
        <Literal>1146</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1154"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1155"/>
        <Literal>I peruse both Coffee and Seasoned Advice daily. Even since the inception of the Coffee site, I frequently see coffee questions on Seasoned Advice. Coffee is on-topic at Seasoned Advice, but it&apos;s MORE on-topic here!
I assume this is because users (new and &quot;seasoned&quot;) simply don&apos;t know there&apos;s a dedicated Coffee site! Every time I see a coffee question on Seasoned Advice I comment on it (and sometimes answer) to encourage people to join us over here at Coffee. Some recent ones... this one from today, and this one from a few days ago that got supercollided and got an inordinate number of views... and another that spurred this answer to a related MetaCoffee question. All would have been very welcome over here at Coffee! :)
Clearly, we&apos;re not going to migrate previous SA questions about Coffee. I also understand not wanting to immediately migrate new questions because of this &quot;policy&quot; (which I view more as a suggestion); i.e., don&apos;t migrate a coffee question, because Coffee is on-topic at SA.
I think this is significantly impacting Coffee.SE&apos;s adoption and relevance. If we had all of the New Coffee Questions over here at Coffee, I think we&apos;d have a much better chance of getting off the ground.
How do we get people to ask Coffee Questions here instead?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1155"/>
        <Literal>2015-08-08T02:08:27.550</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1155"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1155"/>
        <Literal>How can we get people to ask Coffee Questions at This Site?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1156"/>
        <Literal>Why limit the hunt to Seasoned Advice? 
Sure, they get coffee questions, and that&apos;s why you&apos;ve got a community promotion ad up there. But what if we try thinking beyond &quot;where are the coffee questions and how do we get them here?&quot;, and instead, think: &quot;where are the coffee people and how do we get them here?&quot;. 
What kind of people are coffee Q&amp;A people? Millions of people drink coffee, but what we&apos;re looking for here is coffee hobbyists, not just drinkers. People who like to experiment with brewing methods, spend money on gear, and optimize for various qualities. They aren&apos;t just coffee drinkers - they&apos;re coffee tinkerers. So people who might be drawn to this site are tinkerers in other fields who dabble in coffee (among many other likely hobbies). 
Some initial thoughts about where these kinds of people might come from:

Bicycles
Beer
Homebrewing
Lifehacks
The Great Outdoors

There are probably way more. Not all of those sites are graduated, so you won&apos;t necessarily be able to place community promotion ads, but it might be a place to start if some Coffee SE ambassadors try to make new friends in those chat rooms and see if they&apos;ve got any coffee questions.
The upshot of this type of activity is that you aren&apos;t trying to take existing people or questions from a site that already welcomes them; you&apos;re just trying to show people who might be interested in coffee tinkering that there&apos;s a place where their questions would be welcome.
My advice, in the general, tl;dr sense, would be to think about what other types of people would be likely to hang out and ask questions here (the hard part), and then figure out where to go to reach those people (the easy part). 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1156"/>
        <Literal>2015-08-10T15:39:26.027</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1156"/>
        <Literal>1155</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1156"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1157"/>
        <Literal>I think you may be looking at this from the wrong angle. The purpose of creating this site wasn&apos;t to start moving a community (or their questions) from one site to another. You&apos;re supposed to be out there on the Internet to find a new community (or at least a new scope of questions) that were not being well served before. 
Where is this untapped audience? Or questions that cannot be asked elsewhere? Finding them is your job now.
If you read my article about why (sometimes) we split off subjects from existing sites — Apparently this is a duplicate — I list a few of the criteria we would be looking for:

We would be looking for things like:

An ecosystem of questions that are not already in scope on the existing site(s)
A show of numbers that clearly demonstrates the parent site is failing to attract that
  audience ← this is a big one
A weighty argument that a new community exists that does not identify themselves as part of the larger subject (see Ubuntu versus Unix)
Scope Failure — Maybe we got it wrong the first time. A large subject can cover a huge number of topics. But if the site is not competitive in any particular subject, it may be time for a breakup (&quot;sum of the parts&quot;)
etc.


I think (1) is a tough sell. I haven&apos;t seen many of those &quot;largely off-topic for a cooking site&quot; questions yet. 
Secondly, if you&apos;re trying to divert users/questions from another SE site, that disproves (2) by definition. That would have ended the creation of this site before it even got started. 
That leaves (3) and (4) — a community that loves their coffee, but it would never occur to them to try our Cooking site. 
But I don&apos;t believe soliciting and diverting users from other SE sites is the way to go. The best way to bring in that new audience is to find OTHER coffee communities and show them what Stack Exchange is about.
That&apos;s why we created this site.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1157"/>
        <Literal>2015-08-10T16:08:10.803</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1157"/>
        <Literal>1155</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1157"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1158"/>
        <Literal>I have a closed question here and I have some ideas about narrowing the scope.
But I wonder if we shouldn&apos;t voice some opinions on the broader issues at stake.
Poll, lists. On big sites like SO, they&apos;re just unmanageable. But in its early days, they were quite a draw. And lots of fun, too.
Other sites like math.SE have managed to accommodate big-lists with certain constraints (CW).
So, do we want them? Can we handle them?
Mocha Java?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1158"/>
        <Literal>2015-08-22T07:48:58.860</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1158"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1158"/>
        <Literal>Do we want some kinds of poll-type list or fishing questions?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1159"/>
        <Literal>Two cents from cooking, since our past polls were in a very similar department to your potential ones. The polls may well work out for some amount of time right now - as you say, the site&apos;s smaller. But in the long run I&apos;d predict you&apos;ll find yourself gradually changing your mind and starting to close them. Old polls still attract new answers. Old polls get used as examples to justify new broad/subjective questions. And new ones get less and less manageable.
Math.SE probably isn&apos;t really a great example in favor of this idea; if you look through their big-list tag, you&apos;ll find plenty where the voting/sorting has broken down because there are just too many answers, and the early popular ones win out. You&apos;ll also find a decent number that are on hold/closed. From what I can tell, the ones that are working out are the ones that aren&apos;t actually terribly big lists.
So... it&apos;s certainly something you can do, and it&apos;s possible it&apos;d attract some users. But if the site keeps growing, you&apos;ll almost inevitably find that you have to do a good amount of work to revise your policies and clean up later. Maybe that&apos;s a tradeoff worth making, but it&apos;s also not a bad idea to try to find other ways to broaden your scope that aren&apos;t polls. Maybe you can make product reviews work, or even narrowly scoped recommendations.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1159"/>
        <Literal>2015-08-25T03:15:49.507</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1159"/>
        <Literal>1158</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1159"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1160"/>
        <Literal>Sorry if this is a dupe. I considered uploading an image with a question but the functionality is not working for me. The interface says &quot;click here&quot; but this seems to do nothing. I tried copying and pasting...
Operator error, most likely. Guidance appreciated. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1160"/>
        <Literal>2015-08-27T14:04:24.777</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1160"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1160"/>
        <Literal>Uploading images with question</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1161"/>
        <Literal>I think this is indeed &quot;operator error&quot; :)  But no big deal! It&apos;s fun to learn new features of how to make questions and answers even more helpful and pleasant to read.
See a Meta.SE question on adding images. The interface has been changed/improved since then. 
A number of different things could be at work... e.g.,

Your browser (Chrome, IE, Firefox, Safari, ...)
Your browser settings (dis/allow scripts, pop-ups, security settings)
Your OS or interface (Linux, OS X, Windows, mobile browser, Stack Exchange app)
Simply getting used to the interface. :)

Here&apos;s an example: link to https://upload.wikimedia.org/wikipedia/en/thumb/8/80/Wikipedia-logo-v2.svg/103px-Wikipedia-logo-v2.svg.png as an image: click the &quot;Add Image&quot; button, then click &quot;link from the web&quot; link, then paste the URL, then click the &quot;Add Picture&quot; button. 
Result:

You could also manually type in the Markdown for an image, which looks something like...
![alternate mouseover text here](http://i.stack.imgur.com/mg7TF.png).

Or other formats. If this is your thing, see additional information on Markdown editing at SE.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1161"/>
        <Literal>2015-08-27T17:39:57.557</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1161"/>
        <Literal>1160</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1161"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1162"/>
        <Literal>Jefromi&apos;s answer here suggests that Product Reviews might be a fun and attractive type of question we might cultivate, as a more manageable alternative to lists and polls. What should they look like? How do they work?
My first thought is that they should mostly be Share Your Knowledge type. That is, the question is posted simultaneously with an acceptable answer by the original author (eg.). Otherwise I fear that in short order we&apos;d risk overtaxing the tag system for organizing dozens or hundred of different Mr. Coffee&apos;s.
Or can it just be anybody asking about some product they&apos;re considering? That doesn&apos;t sound right to me, based on my experience on SO and Music.SE. I&apos;d rather see fewer more generalized questions like How to evaluate X-type of machine? or What to look for when comparing two brands of X type of thing?
Other thoughts? How can we handle product reviews?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1162"/>
        <Literal>2015-08-29T05:54:16.203</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1162"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1162"/>
        <Literal>Product Reviews?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1163"/>
        <Literal>I would like to ask a question about descaling products for machines (question below), but wanted to find out if it&apos;s on or off topic prior to asking as I&apos;m new to this community. There also isn&apos;t a large enough corpus of questions having searched for scale/descaling/descaler for me to determine the answer myself.
The question I&apos;d like to ask:

Having recently replaced a Gaggia Platinum Swing Up with a Sage the Oracle, I have some Gaggia Descaler left over.
Is it possible to substitute this for the the Descaler that the Sage machine uses? If so, how would I go about doing so?

(Yes, there&apos;s a double &apos;the&apos; in there. It is called &apos;the Descaler&apos;, presumably as the appliance it&apos;s used with is called &apos;the Oracle&apos;)
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1163"/>
        <Literal>2015-11-10T16:14:57.557</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1163"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1163"/>
        <Literal>Is a question regarding descaling products on-topic?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1164"/>
        <Literal>Looks like a fine question to me. I&apos;d upvote it. And we can always use more questions. ;-)
Your question is basically &quot;can I use a different descaler product in this machine&quot; -- right? Questions about coffee equipment and questions about cleaning are certainly on-topic, so it&apos;s totally reasonable.
See also, for example, questions tagged equipment and especially this one about descaling espresso machines but your question is certainly different enough to warrant asking.
I hope it&apos;s well-received. Some thoughts just for completeness:

Necessary to mention your old machine? Just say you have some other leftover Gaggia brand descaler.
Do you know the ingredients list of either descaler?
Is your question simply &quot;can I use the Gaggia stuff in the Sage machine?&quot; Just another way to ask a similar question.

I hope the answer is &quot;descalers are descalers&quot; but analogs like &quot;can I use off-brand ink in this inkjet printer&quot; hopefully don&apos;t hold here.
Welcome to Coffee.SE!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1164"/>
        <Literal>2015-11-10T19:30:34.803</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1164"/>
        <Literal>1163</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1164"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1165"/>
        <Literal>Stack Exchange Winter Bash 2015 is coming soon! Are we in??
For those who are new to the Stack Exchange network, Winter Bash is an annual light-hearted event where users can earn virtual &quot;hats&quot; by doing certain things on an SE site within the Winter Bash time frame -- these virtual &quot;hats&quot; that you earn can be &quot;worn&quot; as adornments on your SE avatar either on a particular site (e.g., Coffee) or network-wide (i.e., all of Stack Exchange).
The conditions for earning certain hats are &quot;public&quot; -- well-known to all; other hats are &quot;secret&quot; -- you need to figure out what to do to earn the hat. Some public hats might be... ask a well-received question, improve a question, submit an accepted edit, perform tasks in the review queue, etc. Some non-public hats in the past have been... contribute on a particular day, upvote and comment/improve on a first-question from a new user, etc.
Winter bash can be fun and users will sometimes get hats just by participating normally. Any user can opt-out of the Winter Bash (once it starts, any user can click a link like &quot;no hats for me, thanks&quot;); no hats will be earned nor viewed.
Once Winter Bash 2015 begins (14 December), stats can be viewed at http://winterbash2015.stackexchange.com/ . Previous years can be viewed at the respective years, or by redirects from previous years -- e.g., http://winterbash2014.stackexchange.com/ directed to for 2014 and blog posts like this one with more info about secret hats!
An entire site could also opt out of Winter Bash. Are we in, Coffee?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1165"/>
        <Literal>2015-12-04T00:53:44.197</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1165"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1165"/>
        <Literal>Are we in for Winter Bash 2015?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1166"/>
        <Literal>YES!
I&apos;m in. It encourages participation and a general merriment around various holidays and the New Year. It&apos;s a fun diversion from oppressively hot and/or cold and/or normal weather, and is simply a fun time. Count me in!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1166"/>
        <Literal>2015-12-04T00:53:44.197</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1166"/>
        <Literal>1165</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1166"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1167"/>
        <Literal>No.
I hate hats. They&apos;re pointless and distracting. Every year, I click the &quot;I hate hats&quot; link as soon as it is available and I look forward to it. More coffee... less hats!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1167"/>
        <Literal>2015-12-04T00:56:09.977</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1167"/>
        <Literal>1165</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1167"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1168"/>
        <Literal>Joke
I think we should all drink more coffee.
Joke apart
How about organizing local meetups and collaborate with the attendees to ask new questions and discuss some answers?
I have little traction with professionals around me in Japan, as most people do not see themselves participating in English, but I came up with this idea, so that language is not a barrier. My problem, though, is whose account do we use to post questions and answers? If I manage to take part in such an collaboration, I&apos;ll update here with any findings.
Also, Stack Overflow has an incredible momentum, as it is used by professionals at work. If Coffee could be used as a main resource for professionals, and even documentation (see the Documentation beta in SO), the momentum should follow.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1168"/>
        <Literal>2015-12-13T00:53:13.570</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1168"/>
        <Literal>1134</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1168"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1169"/>
        <Literal>After a little discussion between the mods at Seasoned Advice (cooking SE) and us, we&apos;ve decided we&apos;re going to push for a bit more migration between the two sites.
What this means

Asking a question on SA that would be better answered by coffee experts will mean the question is migrated here
Asking a question here that would be better answered by cooking experts (e.g.) will be migrated there.
Everyone gets great answers to their questions

What does this mean, like, for me?
I&apos;m glad you asked! Migration is not possible for non-mods, and us mods can&apos;t keep track of everything that goes on, so if you see a question that you think would be better answered by the community at Seasoned Advice, please flag it and use the custom flag reason to indicate that it should be migrated.
If you do this, there&apos;s no reason to leave a comment - asking the user to head over to SA directly might result in dupes being asked, creating more hassle for everyone.
Happy flagging!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1169"/>
        <Literal>2015-12-15T21:42:16.427</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1169"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1169"/>
        <Literal>Migration and you: getting the best answers for everyone</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1170"/>
        <Literal>I love coffee; it is great. Happiness and coffee.
Happy Coffee Day!

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1170"/>
        <Literal>2015-12-29T18:46:40.147</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1170"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1170"/>
        <Literal>I made a picture of you</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1171"/>
        <Literal>I was just thinking about this, and was wonder if we are in private or public beta? I just joined, and have no way of knowing. I am kind of curious because I would like the beta badge. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1171"/>
        <Literal>2016-01-01T17:07:47.743</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1171"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1171"/>
        <Literal>Are we in private or public beta?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1172"/>
        <Literal>Coffee is currently in public beta. The private beta began on 2015-01-27; the public beta began on 2015-02-09. This is typical of Stack Exchange sites: the private beta period is usually 2-3 weeks long. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1172"/>
        <Literal>2016-01-02T06:25:13.043</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1172"/>
        <Literal>1171</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1172"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1173"/>
        <Literal>Have you guys seen this site?
http://www.baristaexchange.com/
Looks very similar to stackexchanges&apos; site. For example, look at the header.
This seems confusing for our users. Is it also IP infringement?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1173"/>
        <Literal>2016-01-14T00:54:54.273</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1173"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1173"/>
        <Literal>Is &quot;Barista Exchange&quot; confusing for users?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1174"/>
        <Literal>It&apos;s a discussion board with the word &quot;exchange&quot; in its name. This isn&apos;t a discussion board, and we hardly have a monopoly on the word &quot;exchange&quot;. 
Also there are a crapload of ads on that thing, which should make it obvious pretty quickly that it&apos;s a whole different sort of party. 
I don&apos;t think it&apos;ll be a problem.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1174"/>
        <Literal>2016-01-14T01:15:42.777</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1174"/>
        <Literal>1173</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1174"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1175"/>
        <Literal>In the vein of this previous post, please share any ads for Coffee Stack Exchange in the appropriate size!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1175"/>
        <Literal>2016-01-15T10:19:58.793</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1175"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1175"/>
        <Literal>Community ads for Coffee.SE 2016</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1176"/>
        <Literal>
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1176"/>
        <Literal>2016-01-15T10:27:26.733</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1176"/>
        <Literal>1175</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1176"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1177"/>
        <Literal>We&apos;ve got a great site here, but we&apos;re only getting one or two posts a day at the moment, and it would be good to expand, especially given the new year.
How can we encourage more people to post here at Coffee.SE?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1177"/>
        <Literal>2016-01-18T01:13:17.213</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1177"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1177"/>
        <Literal>Getting even more users</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1178"/>
        <Literal>One thing that we can do is to expand on the agricultural side of coffee.  Most of the questions here are about the consumption side.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1178"/>
        <Literal>2016-01-19T21:40:02.553</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1178"/>
        <Literal>1177</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1178"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1179"/>
        <Literal>I&apos;m creating a Coffee related iOS app and as a side-feature I would like to allow users to read, ask and answer questions on Coffee.StackExchange from the application.
Of course I would make it very clear in the app that coffee.stackexchange.com is an external site not owned by myself.
Question
Is there a way to do this? If it&apos;s not possible to ask and answer, I&apos;d like to at least be able to get a read-only feed.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1179"/>
        <Literal>2016-02-09T02:07:25.543</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1179"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1179"/>
        <Literal>Is there an API for Coffee Stack Exchange?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1180"/>
        <Literal>Yes, Stack Exchange API is available for your use. It supports both read and write operations. Passing the site parameter site=coffee  is all you need to direct them to this particular site. 
Sample query: returns 10 newest questions on the site. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1180"/>
        <Literal>2016-02-09T04:43:09.783</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1180"/>
        <Literal>1179</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1180"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1181"/>
        <Literal>I&apos;ve been a member of the group for a week or so (lurking a bit before that) and have been looking at some of the meta chats about getting more participation. I&apos;ve started to add a few questions and have received some good answers.
From the current site trends, does accepting an answer to a question with 1 answer deter people from adding another answer?
I want to credit people with an accepted answer for their replies (I&apos;ve been up voting their answers so far), but I also don&apos;t want to deter other people from contributing (which will in turn help push up the stats).
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1181"/>
        <Literal>2016-02-11T09:52:27.803</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1181"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1181"/>
        <Literal>Does accepting an answer to a question with 1 answer deter people from adding another?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1182"/>
        <Literal>Personally, I don&apos;t think it has significant-enough benefit one way or another to warrant &quot;purposefully holding back&quot; accepting a response. In sum: if you got an answer that fully or sufficiently answers your question, accept it. If you are in some way not satisfied, don&apos;t accept; in that case, add a comment or edit the question to say what&apos;s missing, or even ask a new question! If there&apos;s nothing qualitatively missing, then I think you&apos;ve got your answer. :)
I looked around on Meta to see if this question has been asked before, and I didn&apos;t immediately find one. Here&apos;s a few with related topics:

From Meta.SE, on encouraging or rushing people to accept answers
From Meta.Math, on people who don&apos;t accept answers
From Meta.SE, a very basic newcomer&apos;s primer on the effects in general of accepting an answer.

Extremes on both ends (immediately accepting first response, or never accepting a response) probably have impacts. I am guilty of &quot;not accepting&quot; sometimes, though I am usually good about up-voting any/all answers to a question of mine that have value. 
Accepting is the right thing to do if you have received an answer that answers your question. It gives you some extra points, the answer-er some extra points, and it helps draw other people to the answer that you (the asker) found most helpful.
Other considerations: 

You can always change your mind! If a new answer comes in that better answers your question, you can accept a different answer.
Questions without an accepted answer will show up in the &quot;unanswered questions&quot; list, even those that have (one or more) answers. I wish there were another list of &quot;questions that don&apos;t have any answers&quot; to them.

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1182"/>
        <Literal>2016-02-11T16:51:34.133</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1182"/>
        <Literal>1181</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1182"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1183"/>
        <Literal>In my humble, completely unbiased opinion, accepting one answer deters future answers to some extent. 
Generally speaking, as I scroll through the questions I skip over most of the ones with an accepted answer unless they have specific appeal to me. (To be honest, sometimes I skip over questions with unaccepted answers too.) However, in some cases the first answer is obviously inadequate, or as the case is with this one, I see that the question could have many more than one good answer. 
I find myself avoiding answered questions primarily due to the notion that I&apos;ll offend someone with my response by insinuating the incompleteness or inaccuracy of his answer. Therefore, the wording of the question itself and it&apos;s apparent openness to conflicting or slightly differing viewpoints will probably impact future responses more than actually accepting an answer.
This is an excellent question, and I&apos;m always glad to see someone ask something that I&apos;ve been thinking about so I don&apos;t have to.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1183"/>
        <Literal>2016-02-15T04:41:38.917</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1183"/>
        <Literal>1181</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1183"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1184"/>
        <Literal>I was searching on a google and found out that there is one site which contains all our questions and answers in same exact manner.
So, i am just curious to know that what is happening here? If it&apos;s not stack related site then is it allow to fetch all data from stack site? Does this site have any permission to take those Q&amp;As ?  
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1184"/>
        <Literal>2016-02-18T05:11:27.530</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1184"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1184"/>
        <Literal>Do we have any other site where our Q&amp;A s are getting fetched?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1185"/>
        <Literal>The site you found is Column 80 - Plain Text optimised Stack Exchange, an old project by Mark Henderson (Mark is currently an employee of Stack Exchange, but the project predates his employment by several years). The Column80 site uses the Stack Exchange API to retrieve posts. As animuson pointed out, it does not provide sufficient attribution, which is unfortunate because it&apos;s a really cool project otherwise.  
There are also numerous scraper sites, which are not as cool: they copy posts from Stack Exchange and try to monetize the traffic. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1185"/>
        <Literal>2016-02-18T06:54:55.927</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1185"/>
        <Literal>1184</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1185"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1186"/>
        <Literal>I think this is true (Accepted Answers discourage further efforts) of some sites, particularly high traffic ones, and possibly for some members even on low traffic sites, but Coffee.SE is a fun site for many members, at least in comparison with the seriousness of StackOverflow and Math.SE.
While there are some Answers here that are more useful and/or better written than others, the craft of coffee brewing and roasting lends itself to varied viewpoints and tastes.  Seeing an Answer already posted here (on Main), even an Accepted one, probably has less effect on members&apos; motivation to respond than on most SE sites.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1186"/>
        <Literal>2016-02-23T02:53:02.453</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1186"/>
        <Literal>1181</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1186"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1187"/>
        <Literal>A few days ago I have answered a question and it was accepted. Suddenly, it is unaccepted when a better answer appeared. The person who asked the question fairly unchecked my answer and checked the better answer. The answer was indeed better, so I voted for it, too. Do not take anything personal, we are trying to share and learn together here.
Lessons learned: One may have a better answer. And the accepted answer can be unaccepted anytime. So, you shouldn&apos;t worry about that, I think.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1187"/>
        <Literal>2016-03-17T23:47:37.157</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1187"/>
        <Literal>1181</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1187"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1188"/>
        <Literal>I&apos;ve &quot;joined&quot; the Coffee site.  If I&apos;m on another StackExchange site, I can click on the dropdown on the upper left corner and there&apos;s a list very close to the top of &quot;Your Communities&quot; that shows all the StackExchange sites I regularly read... except the Coffee site.  
If I want to check out Coffee, I have to scroll through the full list.  C is fairly early in the alphabet, but it still bothers me to have to do this scrolling to visit the site.
I&apos;m a lurker (I don&apos;t have knowledge to provide answers, and all my questions so far are already covered) - would that be part of the problem?
Is this a bug or intended?  Is there anything I can do to add Coffee to my &quot;Your Communities&quot; list?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1188"/>
        <Literal>2016-03-18T18:21:15.973</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1188"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1188"/>
        <Literal>Coffee doesn&apos;t show up in &quot;Your Communities&quot; dropdown</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1189"/>
        <Literal>Welcome to Coffee -- lurkers are welcome! :)
I&apos;m not sure if (or by what metrics) the Stack Exchange menu auto-populates, but the menu is customizable/editable.
Select the menu; under &quot;YOUR COMMUNITIES&quot; section, select blue &quot;edit&quot; link. You should be able to type in &quot;coffee&quot; in the &quot;search&quot;, select the site, and click the &quot;Add&quot; button. You can also re-order the list in the &quot;edit&quot; view by dragging-dropping the entries up or down in the list. The full instructions are on this entry at the SE blog.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1189"/>
        <Literal>2016-03-19T19:53:41.203</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1189"/>
        <Literal>1188</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1189"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1190"/>
        <Literal>A tag is a short often one to a few word length label to classify or to draw interest on a specific topic.
In StackExchange family of websites tags are used mainly to classify posts of some specific topic around the same concept.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1190"/>
        <Literal>2016-04-02T20:34:40.917</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1190"/>
        <Literal>5</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1191"/>
        <Literal>Use this tag to tag the posts that are related to tags themselves.</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1191"/>
        <Literal>2016-04-02T20:34:40.917</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1191"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1192"/>
        <Literal>Which books do you recommend to read for people who are interested in coffee?
This question asks for literature about coffee - is that still within our scope? My gut feeling would be no, yet our sadly generic [on-topic] gives no hint whatsoever.
Obviously I can (and did) VTC as too broad, but would this post have the potential of a fun Comunity Wiki? Like most language sites have a collection of sources? So answers would have to be in some kind of order, e.g. history, cultivation, roasting and brewing....
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1192"/>
        <Literal>2016-05-04T12:32:56.943</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1192"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1192"/>
        <Literal>How far do we extend &quot;all aspects of producing and consuming coffee&quot;?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1193"/>
        <Literal>On MathSE there are some very broad questions which--as you suggest--were fun and well-received. Why not? 
Especially on this site, with its relatively small membership, the likelihood of a deluge is slight. I think if answers self-identify according to category that is sufficient order unless there are too many answers.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1193"/>
        <Literal>2016-05-04T17:18:10.333</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1193"/>
        <Literal>1192</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1193"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1194"/>
        <Literal>As the one who asked the question, I also share the same feeling. Thus, I tried to specifically  mention &quot;quality articles and joyful books&quot; in the question text.
I hope with this note the question may end up well and we may share a nice collection of books to follow.
Just before posting the question, I checked the Coffee SE&apos;s tour page. It&apos;s noted as: &quot;all aspects of producing and consuming coffee&quot;. So, the books are at the gray area to me. They may be either included in this definition or not. Both seems acceptable.
One more idea: Actually, I think I implied this in the question text, but it may be better to explicitly state that the question is asked to compile a Coffee SE user reviewed and advised list of books with a possibility of form a community wiki page. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1194"/>
        <Literal>2016-05-04T23:22:18.277</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1194"/>
        <Literal>1192</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1194"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1195"/>
        <Literal>This question strikes me as very, very broad, quite fluid, and highly opinion-based. As new books come out, answers will inevitably change to the point that there cannot be any reasonable canonical answer.
I don&apos;t know whether community wiki or perhaps putting related books in the tag wiki for specific topics make the best approach here.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1195"/>
        <Literal>2016-05-06T08:37:28.710</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1195"/>
        <Literal>1192</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1195"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1196"/>
        <Literal>If an answer or a question from a specific user continuously mentions a specific website or a product (line) as well as functions as a question or an answer, should we consider these series of posts as spam?
The problematic part of this issue is, such posts offer what they claim. They include a part that function as an answer or a question. However, on the other hand, they include and piggybacked product mentioning part, which may be considered spam.
If these posts are considered spam, there may be several solutions:

Each post is separately refined by editing. A lengthy process. Hopefully the author will stop.
Comments can be leaved.
One of the posts may be flagged as spam.
All of the posts may be flagged as spam.

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1196"/>
        <Literal>2016-05-12T21:08:11.937</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1196"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1196"/>
        <Literal>Is mentioning a product or website in each post should be considered spam?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1197"/>
        <Literal>Yes, there are guidelines for self-promotion. Generally it&apos;s ok, as long as you disclose any affiliation, and don&apos;t post exclusively promotional content. If someone is going beyond what you feel is acceptable, please do flag their posts for moderator attention!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1197"/>
        <Literal>2016-05-14T22:42:24.067</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1197"/>
        <Literal>1196</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1197"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1198"/>
        <Literal>The question What factors contribute to differences between coffee beans? asks the questions:

What are the different types of coffee beans, and what are there characteristics? What other factors contribute to differences between one bean and another?

This is ridiculously broad, as seen by some of the comments in answers:


There&apos;s a lot to your question; some of the topics have been covered in other questions.
Answer by hoc_age ♦


Disclaimer: OK, as hoc_age has edited this question, I would like to contribute to this new version. Still, this is quite a broad topic, in my opinion.
Answer by MT San


To break this down, the OP is asking the following questions, all grouped under one heading:


What are the different types of coffee beans?
What are the characteristics of these coffee beans? (× however many kinds of beans identified in the above question)
What are all the factors that contribute to differences between beans?


The first sub-question by itself would be also be ridiculously broad. In the answers to the question, different types of beans were categorised according to regional differences (such as African, Asia-Pacific, but could be broken down even more into individual countries), species and sub-species of coffee (such as Arabica, Robusta, Liberica, Bourbon, Typica, Maragogype), and preparation methods (such as washing, dry-processing).
The second sub-question isn&apos;t actually a single question, but many questions. For example, &quot;What are the characteristics of Arabica beans?&quot; would attract quite different answers to &quot;What are the characteristics of dry-processed beans?&quot; Even then, &apos;characteristics&apos; would have to be defined: shape? flavour? texture? smell? shelf-life? caffeine content?
The third sub-question is also too broad, even if it was split into an individual question, because everything that happens to a coffee bean contributes to its differences: location, handling, sunlight availability, nutrients in the soil, water availability, picking, transportation, roasting method, length of roasting... the list goes on.
A key indicator of the question being too broad is that the current highest-voted answer doesn&apos;t even attempt to address all these points, ending with:

And a lot of other factors... :)

I&apos;ve already flagged this for moderator review but nothing seems to have happened... yet.
So: what does the community think? Should this question be closed as &apos;too broad&apos;?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1198"/>
        <Literal>2016-05-25T11:23:36.163</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1198"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1198"/>
        <Literal>Should this question be closed as too broad?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1199"/>
        <Literal>I would say it is too broad, and should be closed.
I believe this topic is broad enough to be, at minimum, split into the following questions:

What bean-growth variables affect brewed coffee flavour and how?
What are the brewed flavour differences between species of coffee beans?
What bean-storage variables affect brewed coffee flavour and how?

And it can probably be split further than that.
Having the question be this broad risks a large number of answers with little commonality and certainly reduces the chances of a canonical answer within a reasonable word count.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1199"/>
        <Literal>2016-05-25T13:10:01.113</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1199"/>
        <Literal>1198</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1199"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#12"/>
        <Literal>How to prevent calcium loss when drinking a lot of coffee? has shown up and while its certainly coffee related I am unsure if A) any and all health related queries would really be on topic and B) if we as a community could truly be said to possess enough expertise on biochemistry and health practices to adequately answer said questions even if the first condition is true. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#12"/>
        <Literal>2015-01-27T23:07:16.797</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#12"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#12"/>
        <Literal>Should health related questions be off topic?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1200"/>
        <Literal>Great!
(Posting an answer so the Community user doesn&apos;t keep bumping this).
Are there any guidelines what types of questions we should migrate?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1200"/>
        <Literal>2016-05-25T23:59:52.903</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1200"/>
        <Literal>1169</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1200"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1201"/>
        <Literal>No, leave it open.
Because:

This site is a Beta and we need questions
...

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1201"/>
        <Literal>2016-05-27T09:32:41.983</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1201"/>
        <Literal>1198</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1201"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1202"/>
        <Literal>I&apos;m thinking on these two tags, equipment and coffee-machines for a while. Are these two the same thing? If not, what&apos;s the difference?

coffee-machines: This sounds like an automated machine used to brew coffee.
equipment: This sounds like a manual equipment used while preparing coffee.

If it sounds, I opt to include such text as tag guidance.
In this case, &quot;a manual equipment to brew coffee&quot; is missing, maybe it can be added as a separate tag.
Another solution may be to add a tag synonym and tag everything as an equipment.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1202"/>
        <Literal>2016-08-30T21:21:22.047</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1202"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1202"/>
        <Literal>Are these two tags the same: equipment &amp; coffee-machines?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1203"/>
        <Literal>The tags equipment and coffee-machines are certainly different enough to remain separate. By counter-example, I would consider an espresso tamper and a grinder as &quot;equipment&quot; but I couldn&apos;t consider tagging as &quot;coffee-machine&quot;. Both could in a sense be considered as &quot;machines&quot;, and they are for &quot;coffee&quot;, I wouldn&apos;t consider either a &quot;coffee-machine&quot; as such.
Perhaps the equipment tag is too broad, but I think it&apos;s okay as a catch-all. It can include anything that is in coffee-machines, plus lots more. As was pointed out in question and comments, there are other coffee preparation equipment that aren&apos;t &quot;machines&quot;, but there are already more specific tags for many, such as french-press, moka, and pour-over. There are also more general tags like drip-brew that isn&apos;t specific to machine or manual. 
I&apos;m happy with the current state of affairs, but if there&apos;s something unclear, let&apos;s update the tag wiki to be more helpful. If there&apos;s something missing, please do feel free to create a new tag!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1203"/>
        <Literal>2016-10-01T20:34:02.340</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1203"/>
        <Literal>1202</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1203"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1204"/>
        <Literal>What alcohol products go well with a particular type of coffee?
I enjoy the odd Irish Coffee occasionally.
What alcohol products go well with a particular type of coffee?
Desiring to expand my coffee/alcohol combos, I would like to know what types of coffee goes well with what type of alcohol?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1204"/>
        <Literal>2016-10-20T13:16:29.793</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1204"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1204"/>
        <Literal>Would this question be considered on topic or not too broad?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1205"/>
        <Literal>It may be regarded opinion based, I assume.
The reason for that is there are huge numbers of alcoholic beverages and also huge number of coffee-based beverages. Make the calculation for each possible pairing and add people&apos;s preferences.
Maybe, such a thread may be less vulnerable: &quot;Which coffee-based beverages get along together with Cognac?&quot;
Still, this is just my opinion.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1205"/>
        <Literal>2016-10-22T08:46:04.890</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1205"/>
        <Literal>1204</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1205"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1206"/>
        <Literal>Despite the dangers of too-broad or opinion-based, I&apos;d be okay with that question if it were aimed at a certain target, such as roast-level, application (e.g., pre-dinner/aperitif, after-dinner/digestif, dessert), content (cream/milk or no), flavouring (anisette, orange, fruit, ...).
That said, I&apos;m having trouble identifying a spirit or liqueur that would not go with coffee... can you think of counter-examples?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1206"/>
        <Literal>2016-11-08T17:37:13.863</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1206"/>
        <Literal>1204</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1206"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1207"/>
        <Literal>To steal mercilessly from last year&apos;s post:
For those who are new to the Stack Exchange network, Winter Bash is an annual light-hearted event where users can earn virtual hats by doing certain things on an SE site within the Winter Bash time frame -- these hats that you earn can be worn as adornments on your SE avatar either on a particular site (e.g., Coffee) or network-wide (i.e., all of Stack Exchange).
The conditions for earning certain hats are &quot;public&quot; -- well-known to all; other hats are &quot;secret&quot; -- you need to figure out what to do to earn the hat. Some public hats might be... ask a well-received question, improve a question, submit an accepted edit, perform tasks in the review queue, etc. Some non-public hats in the past have been... contribute on a particular day, upvote and comment/improve on a first-question from a new user, etc.
Winter bash can be fun and users will sometimes get hats just by participating normally. Any user can opt-out of the Winter Bash (once it starts, any user can click a link like &quot;no hats for me, thanks&quot;); no hats will be earned nor viewed.
Once Winter Bash begins (19 December), stats can be viewed at http://winterbash2016.stackexchange.com/.
As a community, we can opt-out of Winterbash, but we are opted in by default. So, hats: yea or nay?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1207"/>
        <Literal>2016-12-02T11:33:40.777</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1207"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1207"/>
        <Literal>Should we opt-out for Winter Bash 2016?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1208"/>
        <Literal>No.

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1208"/>
        <Literal>2016-12-05T11:06:45.327</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1208"/>
        <Literal>1207</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1208"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1209"/>
        <Literal>I think the question is straightforward. Are they synonyms or do are there nuances? I think they could be declared as synonyms.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1209"/>
        <Literal>2017-01-13T10:44:19.357</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1209"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1209"/>
        <Literal>Should we merge coffee-culture and tradition tags?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1210"/>
        <Literal>I recently answered a question about fitting a specific steam tip on to the Breville Dual Boiler.
The user linked the steam tip in question which described the threading to be 1/8&quot; female British Standard size thread. He accepted the answer and moved onto to ask the same question about another coffee machine.
Surely he could continue asking the question and cascade through all the possible variations of it and judging by his re-ask, he hasn&apos;t done any research of his own into the coffee machines he is interested in.
How do we deal with questions like these where they are essentially duplicates born from lack of research?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1210"/>
        <Literal>2017-01-26T10:17:28.060</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1210"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1210"/>
        <Literal>How to deal with question that is essentially the same question but about a different model of coffee machine?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1211"/>
        <Literal>Thanks for highlighting this. In general, putting in policy for this sort of thing is not necessary, unless it becomes a regular issue. In general if you see user behaviour of any kind that you think could be a problem, just raise a custom flag on one of their posts explaining the situation and a mod will deal with the situation. We have better tools and visibility on other activity to know if this is a one-off coincidence or a deliberate attempt to rep-farm.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1211"/>
        <Literal>2017-01-30T11:48:16.373</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1211"/>
        <Literal>1210</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1211"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1212"/>
        <Literal>I have a high end but not commercial latte machine    
It has broken three time and twice I was able to fix it and third I had to pay.
It is broken again but since it is getting old I am reluctant to pay as it will be $130 minimum and no guarantee they can fix it.   
Is a coffee machine repair on scope for this site?   
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1212"/>
        <Literal>2017-02-13T22:13:41.133</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1212"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1212"/>
        <Literal>Coffee machine question</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1213"/>
        <Literal>I would argue that coffee machine repair is a facet of producing and consuming coffee and therefore is acceptable as per the guidelines on What topics can I ask about here?

Coffee Stack Exchange is a question and answer site for people interested in all aspects of producing and consuming coffee.

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1213"/>
        <Literal>2017-02-14T15:06:09.690</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1213"/>
        <Literal>1212</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1213"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1214"/>
        <Literal>Some baristas have an interesting story to share and there are various things that even regular customers do wrong and it drives them nuts. I don&apos;t exactly remember, but once there was a barista who once posted (not on stackexchange) about how he used to get angry at a customer who used a straw to drink his coffee. The problem with this customer was he was drinking a special type of coffee which is prepared in layers (I would be grateful if someone points out the name for me) and by using a straw he was drinking the layers in a reverse order (bottom-most first). Can I ask questions about similar experiences here?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1214"/>
        <Literal>2017-04-20T14:29:16.313</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1214"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1214"/>
        <Literal>Can I post a question asking baristas their experiences?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1215"/>
        <Literal>In my opinion, such experiences may be quite subjective. Therefore, it will be difficult to define the correct answer, which is against the format of the site. Thus, I opt for no.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1215"/>
        <Literal>2017-05-04T08:47:56.480</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1215"/>
        <Literal>1214</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1215"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1216"/>
        <Literal>No
But there&apos;s an Area 51 Proposal for beverages!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1216"/>
        <Literal>2017-06-09T14:23:43.143</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1216"/>
        <Literal>91</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1216"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1217"/>
        <Literal>This has partially been covered here, but was more broad than specifically iced coffee
Are questions about the beverage iced coffee here appropriate? Such as differences in bean types, preparation etc? 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1217"/>
        <Literal>2017-06-19T20:37:33.587</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1217"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1217"/>
        <Literal>Questions about Iced Coffee?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1218"/>
        <Literal>Iced Coffee is Coffee, so absolutely, yes!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1218"/>
        <Literal>2017-06-20T08:41:35.890</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1218"/>
        <Literal>1217</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1218"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1219"/>
        <Literal>Similar to &apos;covfefe&apos;, except it&apos;s not.
okay, I know this is pretty much out of date already but I had to...
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1219"/>
        <Literal>2017-07-22T19:27:53.693</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1219"/>
        <Literal>1121</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1219"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1220"/>
        <Literal>Not Just another Drink, But A Caffeinated Gateway to Zen
A Caffeinated Calling
Brewing the perfect roast
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1220"/>
        <Literal>2017-07-29T21:32:23.117</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1220"/>
        <Literal>1121</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1220"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1221"/>
        <Literal>I&apos;m beginning to do some post reviewing in my spare time and have run into quite a few circumstances where I just hit the Skip button because I&apos;m not sure that my options fit the circumstances.
Sweet Coffee
This is a good example of what I am talking about.  We have options to basically approve, delete or skip this post.  I was hoping I might get some advice on how other reviewers handle this type of question.  Should we be very critical of the posts to maintain high quality, or be lenient and let a post like the answer above slide and maybe throw a comment in to the poster to try and get some improvement in answer quality?  The user is brand new, and has posted what essentially comes down to an advertisement, but in such a way that it actually kind of sort of answers the question (in a terrible way).
On the one hand we want to maintain content integrity, but on the other hand, we don&apos;t want to be so brutal in our reviewing that it turns users away from the site.  I would like to determine what the current consensus is on reviewing practices, or at least throw some ideas around to figure out how strict I should be when performing reviews.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1221"/>
        <Literal>2017-08-08T16:57:13.453</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1221"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1221"/>
        <Literal>Post reviews, what to do when options don&apos;t fit circumstance</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1222"/>
        <Literal>I have noticed in particular that Coffee SE hasn&apos;t been getting much traffic than it should be getting. Has any of the admins of Coffee SE tried looking into making some ads to post on other more established SE sites (Like Seasoned Advice)?
If not, is there any other ways to help improve traffic on this site besides for advertising?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1222"/>
        <Literal>2017-08-22T19:05:01.850</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1222"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1222"/>
        <Literal>Has Coffee SE tried making some adds to promote the site?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1223"/>
        <Literal>I could not found any chat room for this community. 
If this community don&apos;t yet have  chat room, then one chat room should be created. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1223"/>
        <Literal>2017-11-30T09:28:23.437</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1223"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1223"/>
        <Literal>Where is the chat room for coffee community?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1224"/>
        <Literal>It&apos;s here:
https://chat.stackexchange.com/rooms/20611/the-percolator
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1224"/>
        <Literal>2017-12-06T09:33:45.990</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1224"/>
        <Literal>1223</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1224"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1225"/>
        <Literal>We are in extreme inactivity. Reviews rarely pop up and we aren&apos;t doing anything really, anxious to get something done on this site.
Sure, (all of the following stats are from Area 51), we&apos;re good on daily views and almost there with the avid users stats. But our question rate has fallen to a question every two days. I was shocked to see that, the 50th latest question was asked in March. That&apos;s over 3 months ago, over 90 days ago. Our reputation leagues show it as well, our number one user this week got... 115 rep. Also, this is our first meta post since November 2017. Our chatroom? All I see are intervals of days and even weeks.
So, what can we do to get more people into this site other than more ads?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1225"/>
        <Literal>2018-07-07T13:36:56.380</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1225"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1225"/>
        <Literal>We&apos;re in an abyss of inactivity... a massive one</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1226"/>
        <Literal>Today, I realized that a &quot;recommendation&quot; tag exists. As the tag itself suggests &quot;opinion-based question&quot;, should we discourage its use?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1226"/>
        <Literal>2018-09-27T08:34:53.093</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1226"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1226"/>
        <Literal>Should we remove recommendation tag?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1227"/>
        <Literal>Different communities in SE take different stances on this matter. Recommendations aren&apos;t neccessarily a bad thing: see the successful site Software Recommendations. 
Personally, I do think well asked recommendation questions can be fine, e.g.: What product works well for cleaning [specific thing]?. 
Given we certainly don&apos;t have a problem with too many recommendation questions, I would just...not bother about this just now. If there are specific questions you think are a bad fit then by all means highlight them but making general decisions like this is too much rule-lawyering for where we are now.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1227"/>
        <Literal>2018-09-27T18:50:58.857</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1227"/>
        <Literal>1226</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1227"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1228"/>
        <Literal>Maybe something about the correlation between the facts that caffeine is both the least regulated psychoactive drug in the world and also the most widely used …
Nah.  It&apos;s funny, but not hah-hah funny.
Coffee is drank in many ways: sweet, creamy, spiced, or pure.
And, for those who have it spiked, it doubles as a cure.
Whoops.  That&apos;s no good.
How about this?
The internet is all a-buzz about Coffee.SE
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1228"/>
        <Literal>2018-12-24T02:33:30.360</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1228"/>
        <Literal>1121</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1228"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1229"/>
        <Literal>It&apos;s New Year&apos;s Day in Stack Exchange land...
A distinguishing characteristic of these sites is how they are moderated:

We designed the Stack Exchange network engine to be mostly self-regulating, in that we amortize the overall moderation cost of the system across thousands of teeny-tiny slices of effort contributed by regular, everyday users.
-- A Theory of Moderation

While there certainly are Moderators here, a significant amount of the moderation is done by ordinary people, using the privileges
they&apos;ve earned by virtue of their contributions to the site. Each of you contributes a little bit of time and effort, and together you accomplish much.
As we enter a new year, let&apos;s pause and reflect, taking a moment to appreciate the work that we do here together.
To that end, here is how the moderation done here on Coffee breaks down by activity over the past 12 months:
                 Action                  Moderators Community¹
---------------------------------------- ---------- ----------
Users suspended²                                  0          5
Users destroyed                                   1          0
Users contacted                                   1          0
Tasks reviewed³: Suggested Edit queue            10        175
Tasks reviewed³: Reopen Vote queue                0          1
Tasks reviewed³: Low Quality Posts queue          6         61
Tasks reviewed³: Late Answer queue                0        105
Tasks reviewed³: First Post queue                 0        257
Tasks reviewed³: Close Votes queue                0         39
Questions protected                               0          2
Questions flagged⁴                                1         33
Questions closed                                 11          5
Question flags handled⁴                          15         19
Posts undeleted                                  23          0
Posts locked                                      0          2
Posts deleted⁵                                   56         58
Posts bumped                                      0         80
Comments flagged                                  0         24
Comments deleted⁶                                18         40
Comment flags handled                            11         13
Answers flagged                                   0        132
Answer flags handled                            117         15

Footnotes
¹ &quot;Community&quot; here refers both to the membership of Coffee without diamonds next to their names, and to the automated systems otherwise known as user #-1.
² The system will suspend users under three circumstances: when a user is recreated after being previously suspended, when a user is recreated after being destroyed for spam or abuse, and when a network-wide suspension is in effect on an account.
³ This counts every review that was submitted (not skipped) - so the 3 suggested edits reviews needed to approve an edit would count as 3, the goal being to indicate the frequency of moderation actions. This also applies to flags, etc.
⁴ Includes close flags (but not close or reopen votes).
⁵ This ignores numerous deletions that happen automatically in response to some other action.
⁶ This includes comments deleted by their own authors (which also account for some number of handled comment flags).
Wishing you all a happy new year...
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1229"/>
        <Literal>2019-01-01T04:42:23.270</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1229"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1229"/>
        <Literal>2018: a year in moderation</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1230"/>
        <Literal>It&apos;s New Year&apos;s Day in Stack Exchange land...
A distinguishing characteristic of these sites is how they are moderated:

We designed the Stack Exchange network engine to be mostly self-regulating, in that we amortize the overall moderation cost of the system across thousands of teeny-tiny slices of effort contributed by regular, everyday users.
  -- A Theory of Moderation

While there certainly are Moderators here, a significant amount of the moderation is done by ordinary people, using the privileges 
they&apos;ve earned by virtue of their contributions to the site. Each of you contributes a little bit of time and effort, and together you accomplish much.
As we enter a new year, let&apos;s pause and reflect, taking a moment to appreciate the work that we do here together. 
And what could be more festive than a big pile of numbers? 
So here is a breakdown of moderation actions performed on Coffee over the past 12 months:
                 Action                  Moderators Community¹
---------------------------------------- ---------- ----------
Users suspended²                                  0          4
Users destroyed³                                  3          0
Users contacted                                   1          0
Tasks reviewed⁴: Suggested Edit queue             4         78
Tasks reviewed⁴: Low Quality Posts queue          0         75
Tasks reviewed⁴: Late Answer queue                0        111
Tasks reviewed⁴: First Post queue                 0        202
Tasks reviewed⁴: Close Votes queue                0         27
Questions protected                               0          5
Questions merged                                  1          0
Questions flagged⁵                                0         26
Questions closed                                  4          3
Question flags handled⁵                          12         13
Posts locked                                      1         10
Posts deleted⁶                                   71         42
Posts bumped                                      0         56
Comments flagged                                  0         37
Comments deleted⁷                                 8         49
Comment flags handled                             9         28
Answers flagged                                   3        219
Answer flags handled                            159         61

Footnotes
¹ &quot;Community&quot; here refers both to the membership of Coffee without diamonds next to their names, and to the automated systems otherwise known as user #-1.
² The system will suspend users under three circumstances: when a user is recreated after being previously suspended, when a user is recreated after being destroyed for spam or abuse, and when a network-wide suspension is in effect on an account.
³ A &quot;destroyed&quot; user is deleted along with all that they had posted: questions, answers, comments. Generally used as an expedient way of getting rid of spam.
⁴ This counts every review that was submitted (not skipped) - so the 2 suggested edits reviews needed to approve an edit would count as 2, the goal being to indicate the frequency of moderation actions. This also applies to flags, etc.
⁵ Includes close flags (but not close or reopen votes).
⁶ This ignores numerous deletions that happen automatically in response to some other action.
⁷ This includes comments deleted by their own authors (which also account for some number of handled comment flags).   
Further reading:

Wanna see how these numbers have changed over time? I posted a similar report here last year: 2018: a year in moderation...
You can also check out this report on other sites
Or peruse detailed information on the number of questions closed and reopened across all sites

Wishing you all a happy new year...
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1230"/>
        <Literal>2020-01-01T16:48:36.640</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1230"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1230"/>
        <Literal>2019: a year in moderation</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1231"/>
        <Literal>Us coffee nerds are forever searching for the best grinder / espresso machine / French press / other gadget for our passion. So asking for recommendations is for many users a logical approach.

We don’t accept blank “what is the best X” questions and close them ans opinion-based. 
When  a questioner gives a clear set of criteria (a grinder that’s quiet enough for a cubicle, bean-to cup machines that can handle two types of coffee), we will allow them, accepting that answers listing a certain model may be outdated at some point.

But:
Some of these questions attract answers that follow the pattern “Get a [product name], it’s the best on [some website that compares five models and looks pretty spammy otherwise].” - no why, no description of the critical features, not even a personal experience.
I know there are some very good blogs etc., whose authors really have a lot of knowledge and dedicate time and effort into reviewing their gadgets, so linking to them can actually support a recommendation. But some are blatantly advertising garnished with some wishy-washy text.
I therefore suggest:

Questions asking for product recommendations must list the intended use case and the critical feature(s), the more details the better.
Answers must 

Either be based on personal experience (the poster has used or at least tried out the mentioned product) and explain why the recommended product fulfills the asker’s needs, optionally, also explain any drawbacks.
Or support the recommendation with a source that primarily focuses on the products over advertising and post reviews that are qualified, detailed and based on good criteria. The site should show general knowledge and passion for the topic (ideally for making coffee, for some products, cooking or similar can also be good) and must label affiliate links clearly.


Answers that just link to some questionable site (“The ten best XYZ of 2020 - buy here” should be considered spam and treated accordingly.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1231"/>
        <Literal>2020-01-05T17:47:43.603</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1231"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1231"/>
        <Literal>Can we ban low-quality product comparison websites?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1232"/>
        <Literal>Oh! This is a duplicate. :)
Should we remove recommendation tag?
Actually, we have thought that it could be better to leave them open for a while, previously. Do you think that we should reconsider blocking them? I still think we are more or less in the same situation. Maybe, we could observe some more.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1232"/>
        <Literal>2020-01-20T20:33:25.627</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1232"/>
        <Literal>1231</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1232"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1233"/>
        <Literal>The convention on StackExchange is that signatures in Q &amp; A aren&apos;t required, or desired:

We don&apos;t want to clutter up question pages with a lot of redundant signature blocks and taglines and so forth. While these are common on forums, questions and answers on Stack Exchange should contain only relevant content.
Please use your built in profile, avatar, and username as your signature; that&apos;s what they are there for, and every post you make is already &quot;signed&quot; this way!

I recently proposed an edit to an answer which corrected a spelling mistake and removed the posters signature. This was approved by one user and then rejected by the author of the answer with the (canned) reason:

This edit does not make the post even a little bit easier to read, easier to find, more accurate or more accessible. Changes are either completely superfluous or actively harm readability.

Putting aside the fact that it&apos;s a wildly inappropriate reason to select when rejecting the specific edits made, what is the convention/policy on coffee regarding having / removing signatures from Q&amp;A? Is there one that differs from SE as a whole, or does the convention stand?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1233"/>
        <Literal>2020-01-24T07:18:44.793</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1233"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1233"/>
        <Literal>What&apos;s the convention on coffee regarding signatures in questions and answers?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1234"/>
        <Literal>I see no reason why a different rule should apply. 
And when you are fixing a typo, removing greetings and signatures is common sense. It’s a minor edit, some may think it superfluous, I appreciate the effort.
If I am to venture a guess - the user in question has been a member for a comparatively  short time and no linked profiles to other sites. There’s a good chance that he simply didn’t know about the convention and combined with the fact that it takes some users a while to become comfortable with the fact that their posts may be edited by the community, the decline may well have been a knee-jerk protective reaction. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1234"/>
        <Literal>2020-01-24T17:38:53.693</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1234"/>
        <Literal>1233</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1234"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1235"/>
        <Literal>This tag is used by staff when sharing concepts in the Discovery phase relating to product or configuration changes. In most cases a direction and/or goal has been established, and there has likely been some amount of time invested into discovery work and research. The post is being presented to the Community for feedback to be taken into consideration. Where possible, the post includes specific questions to help guide Community feedback.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1235"/>
        <Literal>2020-04-24T13:33:15.850</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1235"/>
        <Literal>5</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1236"/>
        <Literal>Indicates that the post shares product or configuration change concepts during the Discovery phase. Open to receiving feedback from the Community preceding implementation.</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1236"/>
        <Literal>2020-04-24T13:33:15.850</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1236"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1236"/>
        <Literal>product-discovery</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1237"/>
        <Literal>Seasoned Advice has excluded recipe requests for various reasons. One of the most important one being that asking for recipes is fundamentally opinion-based and therefore not a good fit for the site and the SE system in general.
Should we adapt this reasoning and rule for Coffee SE as well?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1237"/>
        <Literal>2020-06-03T08:54:22.113</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1237"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#1237"/>
        <Literal>Do we accept or close recipe requests?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#1238"/>
        <Literal>I appreciate the Seasoned Advice stance and think we should use the same basic policy here for questions about &quot;how to make...&quot; something: reject the opinion-based &quot;what&apos;s the best recipe for...&quot; type of question but encourage questions relating more to technique or ingredient-list. As with SA there&apos;s a little bit of interpretation or leeway in that policy, and I think we&apos;ll have to do the same here.
The inspirational example linked in comment above could be interpreted as &quot;recreating&quot; or &quot;substitution&quot; -- the question I think could be steered toward &quot;what ingredients could I use to make it taste like that&quot; and be a helpful and productive question. In fact, I might comment on that question to steer it that way. More generally I would (personally) support or encourage edits or comments to steer questions along the lines of the Seasoned Advice policy.
Fortunately I think the space of &quot;recipe requests&quot; will be less problematic in Coffee by nature than in Seasoned Advice. That said, we should be vigilant about opinion-oriented pitfalls of brands or ingredients based on personal taste or preference.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1238"/>
        <Literal>2020-06-05T04:50:17.800</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#1238"/>
        <Literal>1237</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1238"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1239"/>
        <Literal>2020-07-26T12:16:54.913</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1239"/>
        <Literal>5</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#1240"/>
        <Literal>2020-07-26T12:16:54.913</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#1240"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#13"/>
        <Literal>I would vote no. But to be fair I assume there&apos;s doctors out there who drink coffee that may actually know about this. That and there must be scientific articles somewhere.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#13"/>
        <Literal>2015-01-27T23:19:00.887</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#13"/>
        <Literal>12</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#13"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#14"/>
        <Literal>I&apos;ve seen a post asking about the flavor of coffee. As a food site, these questions will certainly end up in the private beta. These questions may be subjective (what is sweet to one is bitter to another), but I don&apos;t know if we should just close all questions of this type.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#14"/>
        <Literal>2015-01-27T23:23:35.603</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#14"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#14"/>
        <Literal>How should questions about coffee flavor be handled?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#15"/>
        <Literal>This was my concern with an answer I gave a few minutes ago. I wanted to make the asker aware of a product, but didn&apos;t want to get shut down for anything that looked like spamming. I chose to provide a link to the manufacturer&apos;s &quot;features&quot; page, which lacked any way to buy the product. Another question had an excellent answer that provided links to purchase the equipment the asker would need to do what they were asking about (backflushing their espresso machine).
Product recommendations can be made from an honest place, but (as has been said) whether a particular post is inappropriate is very subjective. If product recommendations are off-topic, where is the line?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#15"/>
        <Literal>2015-01-28T00:36:20.557</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#15"/>
        <Literal>5</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#15"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#16"/>
        <Literal>There are questions that asked stuff like how should you store coffee beans and stuff where answers may vary. One of my questions was that whether coffee should be served warm or hot. That question was similar, except with only two possible choices. Yet a user says that my question is opinion-based. Now I am confused on what types of questions will be opinion-based. So my question is, which types of questions would be considered opinion-based?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#16"/>
        <Literal>2015-01-28T00:44:38.967</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#16"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#16"/>
        <Literal>What Will Be Considered Opinion Based</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#17"/>
        <Literal>Giving specific recommendations (eg. brand names) should be avoided. Not only is it hard to distinguish legitimate recommendations from product promotions and other spam, but these sorts of things are inherently opinion based (which is generally discouraged on SE sits).
General recommendations (eg. recommending a french press to achieve a certain kind of flavor), is a different matter, of course and may be necessary.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#17"/>
        <Literal>2015-01-28T01:19:58.597</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#17"/>
        <Literal>5</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#17"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#18"/>
        <Literal>What flavor is &quot;preferable&quot;, strikes me as primarily opinion based. However, asking about the general types of coffee flavors should be encouraged. When describing a flavor or taste there are going to be some adjectives that may not be viewed the same way by everyone reading them. If one person says a coffee is &quot;bitter&quot;, that&apos;s not necessarily opinion based. Saying that &quot;because it&apos;s bitter it is no good&quot;, however, is.
It&apos;s hard to mark a defining line, but it&apos;s a line that we can define as a community, and shouldn&apos;t try to pin down right away (though, for the most part, I think it will be fairly obvious when someone crosses it).
Other examples:
Opinion based

A robusta is better than an arabica
Do you prefer a french press or a pour-over?
Bitter coffee&apos;s taste bad

Not opinion based

This coffee has a bitter aftertaste
Coffee A is more bitter than coffee B (somewhat opinion based, but how else do you describe it when making a comparison? this really depends on the question, I think)

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#18"/>
        <Literal>2015-01-28T01:30:33.230</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#18"/>
        <Literal>16</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#18"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#2"/>
        <Literal>Being newly created we have zero feeds appearing in our main chat right now. What blogs, news sites, or other important coffee related things should appear in our main chat room&apos;s feed? Post your suggestions/submissions.  
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#2"/>
        <Literal>2015-01-27T21:26:10.227</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#2"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#2"/>
        <Literal>What should go in our main chat feeds?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#20"/>
        <Literal>I posted a question about coffee growing, and asked what mechanisms affect the flavor of coffee grown at different altitudes (I was thinking of things like temperature, wind, soil differences, etc. might come up).
At least one person suggested that this second part of the question (about what mechanisms cause flavor differences if altitude does indeed affect the final product) was &quot;too scientific&quot; and suggested that it be closed.
Does this mean all growing questions should be off topic? Or all questions related to the chemistry or biology of coffee? Where do we draw the line?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#20"/>
        <Literal>2015-01-28T01:36:49.147</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#20"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#20"/>
        <Literal>Are questions about growing coffee beans on topic?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#21"/>
        <Literal>My personal opinion is that this site should be for coffee growers, roasters, and drinkers alike and that somewhat &quot;scientific&quot; questions should be perfectly on topic as long as they pertain more to coffee than the science.
Questions about the biology of a coffee bean probably belong elsewhere (as they are more about biology and could probably apply to any bean), questions about how some chemical process affects the final flavor of coffee, probably belong here (as it&apos;s something a coffee expert could probably answer better than a general chemistry expert).
TL;DR — If a coffee expert could answer it better than a insert-branch-of-science-here expert, it&apos;s probably a better fit here.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#21"/>
        <Literal>2015-01-28T01:39:32.123</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#21"/>
        <Literal>20</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#21"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#23"/>
        <Literal>It may depend. If they are asking something like:

Is It Preferred To Have Flavor A or Flavor B

That will be subjective and primarily opinion-based as every one has their favorite choice. But if the question is something like this:

Will This Affect The Flavor of The Coffee

That will not be subjective due to the fact it is just asking of the flavor will change or not. This is the situation with the question you posted. The asker just wants to see how the flavor will change, not which one is the best and why. I hope this answers your question!   
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#23"/>
        <Literal>2015-01-28T01:48:54.133</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#23"/>
        <Literal>14</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#23"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#24"/>
        <Literal>I think pour-over is the best tag for the job, simply because it will not be confused with another method. If you call it drip-coffee, then one locale will try to apply the tag to one method of brewing, while another locale will use a different one.
If we then call the machine method filter-coffee, and discourage the use of drip-coffee, it makes for less ambiguity. Admittedly, it does make it difficult for the nationalities who don&apos;t use those terms, but I think that&apos;s better than having half the people on here tagging with one and half the other.
TL;DR — I think we should use pour-over and filter-coffee.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#24"/>
        <Literal>2015-01-28T01:53:35.523</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#24"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#24"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#25"/>
        <Literal>&quot;Stackbucks Coffee&quot;
Sorry, that was too tempting... I like the chatty aspect, though.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#25"/>
        <Literal>2015-01-28T03:49:37.673</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#25"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#25"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#26"/>
        <Literal>just &quot;café&quot; ... 

Above the line is my answer. The rest is just filler to fulfill minimum length criterion.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#26"/>
        <Literal>2015-01-28T07:20:05.917</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#26"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#26"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#27"/>
        <Literal>Coffee is not simply a food, but a beverage with phisiological and neurological effects, that are the main reason many (most?) people drink it.
So it&apos;s quite natural that the way the coffee works on human body should be on topic there.  At least in my opinion. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#27"/>
        <Literal>2015-01-28T07:23:48.043</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#27"/>
        <Literal>12</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#27"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#28"/>
        <Literal>as a nascent community, we like to grow as well as have an identity. A Logo carry a lot about the identity.
We should start think, brew, and sketch the ideas. Even you can contribute your not-so-polished design.
IMO, A logo should be simple, unique, meaningful and fun. What do you think ?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#28"/>
        <Literal>2015-01-28T07:27:33.803</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#28"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#28"/>
        <Literal>What logo we can have ? Let&apos;s start working</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#29"/>
        <Literal>The Coffehouse
Since a coffeehouse is where you take a break and have a chat. So my vote goes for &quot;The Coffehouse&quot;.

&quot;Discussing the War in a Paris Café&quot;, The Illustrated London News 17 September 1870
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#29"/>
        <Literal>2015-01-28T07:49:03.007</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#29"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#29"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#3"/>
        <Literal>It looks like filter coffee has another, different meaning too. When I read &quot;drip coffee,&quot; I think of the kind you get from a traditional coffeemaker. Go for &quot;pour-over.&quot;
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#3"/>
        <Literal>2015-01-27T21:30:20.953</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#3"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#3"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#30"/>
        <Literal>&quot;The roast&quot;
followed by more text to sate the character demon.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#30"/>
        <Literal>2015-01-28T09:31:00.263</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#30"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#30"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#31"/>
        <Literal>The Grinder
We are all delicious coffee beans ;-)
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#31"/>
        <Literal>2015-01-28T09:54:17.403</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#31"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#31"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#32"/>
        <Literal>I&apos;m not talking about recipes for specific coffees, but more like recipes for other food and drinks that include coffee, perhaps even as the primary flavour.
For example, coffee desserts, coffee milkshakes, etc.
Should these be considered on topic here because they involve coffee to such an extent that the choice of bean / roast etc, is likely to affect overall flavour, or should they be designated as off-topic because they are not, in and of themselves, coffees.
To add to that, if we are to ban questions about coffee milkshakes, where do we draw the line between some of the milkier, flavoured iced coffees and milkshakes?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#32"/>
        <Literal>2015-01-28T09:56:12.100</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#32"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#32"/>
        <Literal>Should questions about recipes involving coffee be considered off topic?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#33"/>
        <Literal>I think it is a shame that sharing knowledge of good coffee types/roasts is likely to be off topic here but I think that the subjective nature and potential for spam is something that could degrade the quality of this site (in particular the latter). I don&apos;t know what the overseers think about this as it would be a shame to not capture and share recommendations with the rest of the community. In the early days of SO some of the most useful pages which are now off topic were good book recommendations and so forth which then became wikis. So is it possible that a wiki of recommended coffee beans/roasts is permissable, I don&apos;t know.
The problem with chat rooms is I don&apos;t know how permanent the postings are and how searchable it is. It could still work though.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#33"/>
        <Literal>2015-01-28T10:01:41.423</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#33"/>
        <Literal>5</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#33"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#34"/>
        <Literal>&quot;The Baristas&quot;, or even &quot;The Barista Room&quot; 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#34"/>
        <Literal>2015-01-28T10:07:27.860</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#34"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#34"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#35"/>
        <Literal>The Jampot
After the first coffee shop in London.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#35"/>
        <Literal>2015-01-28T10:40:08.020</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#35"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#35"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#36"/>
        <Literal>According to this it states:

Don’t ask about…
Questions that are primarily opinion-based

This question I think is likely to elicit opinions and subjective answers and probably should be considered off topic.
Do we think these types of questions should be considered on topic for this site?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#36"/>
        <Literal>2015-01-28T10:47:22.410</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#36"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#36"/>
        <Literal>Do we consider this question on topic</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#37"/>
        <Literal>A coffee bean. This was basically the idea i had in mind when i made the proposal to begin with. Everything we talk about is based on the coffee bean.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#37"/>
        <Literal>2015-01-28T12:03:06.817</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#37"/>
        <Literal>28</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#37"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#38"/>
        <Literal>I think they&apos;re unavoidable for a topic such as this. Gear is, like it or not, an essential part of making and enjoying great coffee and there&apos;s a lot of it available. 
Asking for an honest product recommendation doesn&apos;t make for a bad question; asking in a manner that invites dozens of answers due to a lack of scope and constraint makes for a bad question. There are only a limited number of double-walled glass presses in a 2 cup size, and I&apos;d be quite put off if I came to a site all about coffee and couldn&apos;t ask which one was also likely to hold up in a dishwasher. 
Questions that don&apos;t limit the potential number of answers that could be received are by nature too broad, and you have a close reason for those available to you. I&apos;d wait, see if these actually become a problem, and enjoy giving thorough answers to the more interesting ones while you do. It&apos;s fine to have a zero-tolerance spam policy as many of our other sites have adopted, and an inclination to burn link-only or astroturf-like answers as you see them.
But don&apos;t stop yourself from recommending a brand if you&apos;re happy with that brand. I love Breville&apos;s products and I recommended one of their grinders to someone earlier today, in the course of writing a thorough answer. And if spammers start writing comprehensive, thorough answers that receive up-votes then we can basically say mission accomplished.
Software Recommendations does a pretty good job of getting this right, and I&apos;m sure that you could too. But, please, don&apos;t solve problems that you don&apos;t yet have - these types of questions are quite common in this topic, make sure you&apos;re doing yourselves a favor before shutting them down and you can&apos;t do that based on less than 100 questions so far in a private beta.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#38"/>
        <Literal>2015-01-28T12:30:01.167</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#38"/>
        <Literal>5</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#38"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#4"/>
        <Literal>The chatroom name is so bland. &quot;Coffee.&quot; Look at all the creative names others have thought up:

&quot;Root Access&quot; for Super User
&quot;The DMZ&quot; for Security
&quot;The Renderfarm&quot; for Blender
&quot;The Litter Box&quot; for Pets
&quot;The Hangar&quot; for Aviation
&quot;You Are Here&quot; for Travel
&quot;The Water Cooler&quot; for The Workplace
&quot;The Whiteboard&quot; for Programmers
&quot;The Nineteenth Byte&quot; for Code Golf
etc...

Can we think of a better name for our chatroom?
Only one idea per answer, please. Vote up the ideas that you like!
Stolen from Lifehacks meta, which was in turn stolen from PPCG meta. But that&apos;s okay, because I wrote both of those posts too. :P
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#4"/>
        <Literal>2015-01-27T22:31:45.837</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#4"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#4"/>
        <Literal>Let&apos;s think of a creative name for our chatroom</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#40"/>
        <Literal>&quot;The Puck&quot;
Was also thinking &quot;The Whack Box&quot;, but terminology might not be consistent there. I think &apos;puck&apos; is universal for the spent grounds in a portafilter. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#40"/>
        <Literal>2015-01-28T14:10:16.197</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#40"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#40"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#41"/>
        <Literal>Since we&apos;re throwing out ideas how about &quot;Crema&quot;
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#41"/>
        <Literal>2015-01-28T14:43:28.223</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#41"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#41"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#42"/>
        <Literal>That&apos;s a good question. I, as a user of this site, would be interested in health questions but you made a good point - is the community able to appropriately answer the question? 
Good answers will have to link to their sources. 
I would vote that we should allow such questions but the community will have to be vigilant regarding duplicate questions.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#42"/>
        <Literal>2015-01-28T16:53:09.193</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#42"/>
        <Literal>12</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#42"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#43"/>
        <Literal>&quot;Nighthawks&quot;.   
Too subtle?
It is referring to the name of this quite famous painting of a café late at night:  

(From Wikipedia)
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#43"/>
        <Literal>2015-01-28T21:02:08.250</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#43"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#43"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#44"/>
        <Literal>I think all flavor questions should be fair game - there is an entire field (sensory science) dedicated to understanding human perception and preferences of flavor. Many of us are interested in coffee! 
For example, I answered this question, using a system that robustly measures flavor, and without including biased opinions.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#44"/>
        <Literal>2015-01-28T22:31:59.327</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#44"/>
        <Literal>14</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#44"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#46"/>
        <Literal>&quot;Coffee Drops&quot;

Or a variation on the idea, such as &quot;Coffee Dripping&quot;, &quot;Coffee Brewing&quot;.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#46"/>
        <Literal>2015-01-29T01:29:39.570</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#46"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#46"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#47"/>
        <Literal>Health advice should be left to a doctor. We can never know enough about a person to answer such a question on calcium deficiency. 
On the other hand something like, which coffee will hurt my stomach less? May fall into our field. The line is blurred right now, and I can tell you the first question should not be answered by us, but this second one could be.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#47"/>
        <Literal>2015-01-29T03:39:27.267</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#47"/>
        <Literal>12</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#47"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#48"/>
        <Literal>With no intention of singling someone out, I am wondering if posts that include links that further self-interest are considered off topic. I am aware of the &quot;Should product recommendations be on-topic?&quot;, but I feel like this could be slightly different. Examples that I&apos;ve seen:

&quot;How can I go about developing my ability to taste flavors in coffee?&quot;
How will “cold brewed” coffee differ from traditional hot-water extration methods?
When does coffee go off?
What coffees are the least acidic?

Now these are just what has already developed on the website and the information that was provided was relevant, but was directing us to the product that created the data relevant? What if they were links to beans I roasted, brewing products I&apos;ve created, or a cafe that I own? If a top post, is a link to a Chemex that I can purchase through a Peet&apos;s Coffee, wouldn&apos;t the forum function as an unpaid advertisement? 

As a note, I feel that those were all well structured answers and great contributions.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#48"/>
        <Literal>2015-01-29T04:07:49.210</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#48"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#48"/>
        <Literal>Do we allow self-endorsements here?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#49"/>
        <Literal>If they&apos;re well structured answers that were supported by a link given to something the author is affiliated with, it&apos;s generally fine. This is what to look for:

Do all of their answers in some way promote their product? That can be a red flag, not always, but can be. Some people just come to sites specifically to answer questions about their product. Look carefully.
Are many of their answers that also mention their product only tangentially related to the question at hand? That can spell trouble, if someone is looking for places to plant stuff
Do they clearly mention that it&apos;s their link? That&apos;s important, as it asserts a sort of &quot;I hereby assert that this is given in good faith in the spirit of being helpful&quot; thing

We positively want people whose job is coffee on this site, those are your professionals, the people that do lots of science and can answer tougher questions, especially about the brewing process. If they support some of their answers with stuff they&apos;re affiliated with, that&apos;s great. If they go a bit too overboard, moderators have means of contacting them to let them know.
With that said...
Coffee is a topic that is ripe with products (no pun intended), and we will see our fair share of folks that have come here for the wrong reasons. Fortunately, most of us have a very good ability to determine when something just doesn&apos;t seem right - and we give you the ability to flag things for moderator attention.
If you see something that gives you a bit of pause, and you seriously wonder if the person is here for the wrong reasons, flag it as &apos;other&apos; and let us / the moderators-to-be have a look at it. Blatant spam obviously deserves a spam flag directly, I&apos;m talking about the &quot;If it weren&apos;t for the other answers in their history linking to the same site, this would seem completely benign&quot; sorts of things.
Our job as hosts is to make people feel welcome and do our best to basically get out of their way as they participate. The fewer rules, the better. If this becomes a major problem down the road we can revisit it, but for now, I think it&apos;s sufficient if folks just keep an eye out for anything (or, to the point, anyone) going sideways with it.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#49"/>
        <Literal>2015-01-29T04:51:57.547</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#49"/>
        <Literal>48</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#49"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#5"/>
        <Literal>On most SE sites, product recommendations are off-topic, as they tend to become obsolete quickly (see this blog post). Do we want questions asking for the recommendation of goods/products here?
Do we want to completely rule recomendations off-topic, or should we allow certain kinds?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#5"/>
        <Literal>2015-01-27T22:34:21.017</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#5"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#5"/>
        <Literal>Should product recommendations be on-topic?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#50"/>
        <Literal>It&apos;s pretty simple. If they&apos;re asking about brewing components, or brewing technique - they&apos;re on topic. If it&apos;s more about cooking components, or cooking technique, then it&apos;s probably one for Seasoned Advice.
There is going to be overlap, and you should be insanely jealous when it comes to your site - you want any good question that fits within the topic to stay here. Coffee is a common ingredient in many popular deserts, and fits well here, as long as the &apos;gist&apos; requires knowledge of not just cooking, but also coffee in order to answer.
I wouldn&apos;t do anything now, there&apos;s less than 200 questions so far, and the site isn&apos;t even public yet. When you get to ~500 questions and there&apos;s a bigger sampling of these, then it&apos;s much easier to identify factors that make something a solid fit here rather than somewhere else. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#50"/>
        <Literal>2015-01-29T06:12:49.627</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#50"/>
        <Literal>32</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#50"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#51"/>
        <Literal>I think personal health advice should be off-topic, but requests for references to research on the physiology and genetics of caffeine response should be on-topic.  See for example this &quot;twin&quot; study on caffeine intolerance and genetics.
That raises the question of how &quot;good&quot; (authoritative) sources should be.  I doubt there is a bright line test that can be applied, as for example the question yesterday about safety of drinking Kopi Luwak coffee.  It can be, as far as I&apos;m concerned, left to the voting up/down of Answers to police the use of reliable sources.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#51"/>
        <Literal>2015-01-29T14:56:12.690</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#51"/>
        <Literal>12</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#51"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#52"/>
        <Literal>Some things are experienced first-hand but does it imply that the person is factually correct all the time? There might just be people asking serious health-related issues and we might tell them about our opinion  (which is wrong) but it can either be correct and not work because of natural causes or it might be blatant lies. So, should we source every answer we put, or atleast suggest verification sources?
For more info on what is original research, https://en.wikipedia.org/wiki/Wikipedia:No_original_research .
EDIT: I would appreciate more community input. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#52"/>
        <Literal>2015-01-29T17:05:34.633</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#52"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#52"/>
        <Literal>Should original research be allowed?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#53"/>
        <Literal>Unless the question calls for opinion (which, in general, they shouldn&apos;t), everything should be backed with published, verifiable evidence, IMO. Anecdotes are not evidence and so should be avoided. Even though coffee is a highly subjective experience, there is quite a bit of research on the topic and we should utilize that when answering.
I think the term &quot;Original Research&quot; is a tiny bit misleading to someone who doesn&apos;t read that link because all answers require research. I know it means no &quot;unattributable&quot; text, and I think we should include something to that effect, I just don&apos;t know if &quot;Original Research&quot; is the best way to convey that, someone might get scared away from answering because they think they&apos;re unable to write an answer in their own words (which is fine, as long the answer contains attributable facts).
I go to SE for high-quality answers to high-quality questions and compromising on that doesn&apos;t seem like a good direction to go for this site. We don&apos;t want to go the way of yahoo answers...
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#53"/>
        <Literal>2015-01-29T17:29:36.437</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#53"/>
        <Literal>52</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#53"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#54"/>
        <Literal>Wikipedia&apos;s policy is tilted toward the use of secondary sources, almost to the exclusion of primary sources, with the intention of providing conclusions that have a consensus status.
I don&apos;t think that should be our approach.  I may be coming from a mix of StackExchange sites where it is often possible for somewhat naive questions to get responses from bona fide experts.  In any case I see value in the experience of community members informing answers, and generally the community voting can be relied upon to catch out speculation and self-promotion.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#54"/>
        <Literal>2015-01-29T20:36:35.037</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#54"/>
        <Literal>52</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#54"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#55"/>
        <Literal>We have a New Questions feed on another site that I frequent. It&apos;s a great way to make sure frequent chat users are reviewing all incoming questions. Being a brand new beta, it would also be a good place for some of the discussions that will happen around what is on/off topic. 
http://coffee.stackexchange.com/feeds

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#55"/>
        <Literal>2015-01-29T20:48:55.387</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#55"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#55"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#56"/>
        <Literal>Bean Me Up
This appeals to my sci-fi nerdy background!
I do know that it is an existing Coffee Shop, but if there are no copyright issues, it would be awesome!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#56"/>
        <Literal>2015-01-29T22:28:17.143</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#56"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#56"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#57"/>
        <Literal>On mobile (specifically android 4, chrome)  on both coffee and meta.coffee has an issue with the bar that has Questions, Tags, Users, etc.
The hightlighted option has a red underline, but the text almost disappears - it is very very close to the backgroud color and invisible unless fully zoomed in.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#57"/>
        <Literal>2015-01-29T22:56:05.127</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#57"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#57"/>
        <Literal>Theme issue on mobile</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#58"/>
        <Literal>There has to be some leeway sometimes.
For example in the SFF-Stack there is an &quot;Off-Topic&quot; close reason of:

Questions seeking scientific solutions or explanations are off-topic unless they relate directly to a cited work of fiction. There are a number of other Stack Exchange sites dedicated to answering questions on non-fictional sciences.


But there are several questions which ask for purely &apos;scientific explanations&apos; which have been left open (after much discussion). Some of them are even considered to be the site&apos;s most popular questions. Examples:

https://scifi.stackexchange.com/questions/43651/is-sheldon-right-that-superman-would-have-killed-lois-when-he-caught-her
https://scifi.stackexchange.com/questions/28862/how-did-the-cookfire-get-hot-enough-to-melt-gold-in-game-of-thrones
https://scifi.stackexchange.com/questions/72925/why-is-there-no-electricity-available-in-the-walking-dead-series

As long as we define what we can allow, and what we can&apos;t.
I suggest that we let the question sit for a little while, see what types of answers pop-up. If the answers are low quality / primarily opinion-based, then we can surmise that the question is not a good fit for this site.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#58"/>
        <Literal>2015-01-29T23:30:35.340</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#58"/>
        <Literal>36</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#58"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#59"/>
        <Literal>The posts in question are all my own - Hi everyone! 
I&apos;m here because I&apos;m a coffee and tasting professional, and I want to help guide people though experiencing flavors, brewing better coffee, and understanding all the things that go into making coffee interesting, unique, and great. 
I feel I can answer many of these questions better than nearly any other individual or organization because I work for a company that has around ~20,000+ coffee reviews on a full sensory system. I am allowed to use and post graphs and information derived from that data as long as I include a link back to the company. 
With the exception of &quot;How can I go about developing my ability to taste flavors in coffee?&quot; all of my answers are highly up-voted answers; that question obviously crossed the line with the community into pure &apos;promotion&apos; (despite the votes, I believe the app helps individuals learn to taste - but I did a poor job of communicating it). 
I hope to continue to answer questions and support this community while staying on the right side of the self promotion line. If/when I fail at that, please let me know - my email is in my profile. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#59"/>
        <Literal>2015-02-01T18:38:41.347</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#59"/>
        <Literal>48</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#59"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#6"/>
        <Literal>In the UK and Japan we refer to these:

as drip coffee this is a fairly recent thing to invade UK espresso shops but they have been around for a while in Japan.
Whilst this:

is what we call filter coffee. I&apos;m happy to use both terms but this could turn territorial perhaps as it&apos;s unclear what the correct term should be as this is not just a UK-ism.
It may be better to just have a tag synonym in this case perhaps?
Just to defend my corner a little hario is one of the main sellers of these kinds of products and they seem to be the main brand in use in UK and you can see that drip is the term used in their products.
And again here: http://www.hario.co.jp/coffee/hario_coffee/dripdecanter.html although the page is in japanese the url itself uses the term drip.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#6"/>
        <Literal>2015-01-27T22:35:17.573</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#6"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#6"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#60"/>
        <Literal>Current we have stovetop (1), percolator (1), and moka (2). These are all different words for the same thing, and we should unify them into a single tag. So:

What tag do we pick for this?
Once we&apos;ve decided, can synonyms be created from the other two.

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#60"/>
        <Literal>2015-02-02T09:29:18.040</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#60"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#60"/>
        <Literal>Tag Synonym Request: stovetop, percolator -&gt; moka</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#61"/>
        <Literal>I would suggest we use moka as the tag. Not only is it what the people who invented it call it, but it&apos;s the most popular term according to Google Trends:

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#61"/>
        <Literal>2015-02-02T09:32:02.667</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#61"/>
        <Literal>60</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#61"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#62"/>
        <Literal>A lot of stack exchange sites require that the asker demonstrates that they have made some prior effort to solve the problem themselves before asking the site.
Should we do the same?
If so, what level of effort should we require, and what sort of proof should we accept that this effort has been expended?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#62"/>
        <Literal>2015-02-02T14:04:36.153</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#62"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#62"/>
        <Literal>Should we require proof of prior effort?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#63"/>
        <Literal>No. If a question is clear and answerable, it should be answered. 
Not all questions need a historical context or a show of prior efforts. If a bit of background context makes a question clearer, the author should provide it. But when a community makes that a site-wide requirement, too often it becomes overdone when communities feels compelled to enforce these rules everywhere, regardless of merit.
If a question can be made clearer by providing more context, you can easily ask the author for clarification in a comment. With a bit of thoughtful guidance, you create a pleasant end-user experience for all. But when every other question is rubber stamped with &quot;What have you tried?&quot;, it can start to look a bit forced and unnecessary, and even a bit harassing. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#63"/>
        <Literal>2015-02-02T15:35:57.260</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#63"/>
        <Literal>62</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#63"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#64"/>
        <Literal>Java
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#64"/>
        <Literal>2015-02-03T09:54:26.290</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#64"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#64"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#65"/>
        <Literal>We have two mainsite tags thanks to this question on kopi luwak: kopiluwak and weaselcoffee
Tag convention is to hyphenate spaces in a name, not skip them, so these tags should be: kopi-luwak and weasel-coffee. The latter should probably be a synonym, since we don&apos;t need two tags for the same coffee.
Could a moderator replace these tags?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#65"/>
        <Literal>2015-02-05T03:20:47.353</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#65"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#65"/>
        <Literal>Rename [kopiluwak] and [weaselcoffee] to hyphenate their names</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#66"/>
        <Literal>Just checking, we&apos;re keeping luwak and not alamid (as it&apos;s known in most of the rest of SE Asia?) I&apos;m fine with that, as luwak is how it&apos;s been made famous, I just want to make sure before I go doing tag surgery :)
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#66"/>
        <Literal>2015-02-05T08:43:32.370</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#66"/>
        <Literal>65</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#66"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#67"/>
        <Literal>Newest [coffee] questions on Seasoned Advice. Might be some good overlap if people putting coffee in ovens (or whatever it is they do over there) need advice.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#67"/>
        <Literal>2015-02-06T14:14:32.833</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#67"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#67"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#68"/>
        <Literal>There is currently one question tagged with flavour, and several others taged with flavor. There is also a tag coffee-taste. Since I doubt anyone has enough rep to create a synonym yet, I made this meta post.
These could potentially all be merged.
What should be used? Can a SE person please unify the questions / make synonyms? Are there any other variations of this already in use that should also be merged?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#68"/>
        <Literal>2015-02-08T20:35:30.607</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#68"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#68"/>
        <Literal>Potential tag synonyms: flavor, flavour, coffee-taste</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#69"/>
        <Literal>It&apos;s generally pretty obvious when a question would have been trivial to research beforehand (or could be improved if the author had researched it a bit before hand). At least at first, we should play it by ear and let the community decide on a question by question basis.
Hard rules about things that are potentially subjective are a bad idea IMO. If the question is a good fit, and clearly defined, it&apos;s probably okay (even if it could have been solved by a quick search).
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#69"/>
        <Literal>2015-02-08T20:37:29.023</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#69"/>
        <Literal>62</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#69"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#7"/>
        <Literal>The Percolator
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#7"/>
        <Literal>2015-01-27T22:38:09.300</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#7"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#7"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#72"/>
        <Literal>I merged the flavor and taste tags and and created a synonym mapping from taste → flavor.
When it comes to regional spelling variations, we&apos;ve standardized on the US variant. There&apos;s no need to create a synonym for flavour because the text completion will suggest the correct tag.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#72"/>
        <Literal>2015-02-09T16:01:19.293</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#72"/>
        <Literal>68</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#72"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#73"/>
        <Literal>Product recommendations should be on-topic if they are answer to a specific question.  Product recommendations are not on topic when they are the answer to a non-specific or primarily opinion based question.
&quot;What home roaster takes up the least space, uses the least electricity and produces the least amount of smoke?&quot;  - On-Topic Product Recommendation.  Products that do not answer the question are easy flagged as spam or downvoted as bad answers.  
&quot;What shop in Portlandia makes the best espresso?&quot; - Off-topic Product Recommendation.  The answers are inherently opinion based because the question itself is bad and can&apos;t be salvaged.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#73"/>
        <Literal>2015-02-09T23:08:30.040</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#73"/>
        <Literal>5</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#73"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#74"/>
        <Literal>I call moka and percolator very different things; I think [moka] and [percolator] should remain separate and distinct.
Moka is what some call a stovetop espresso maker, which I think is a misnomer anyway.  But it uses pressure to force water through grounds.  Water goes through the grounds (which are in the middle of the device) once into a storage vessel on top, which is separate from the chamber in which the water was added at the beginning of the brew.
But I call percolator something that boils water and drips it over grounds repeatedly.  There is no separate storage vessel for the coffee once brewed; water (at first) or (partially-brewed) coffee is repeatedly boiled and dripped over the grounds (which are instead at the top of the chamber).  The brewed coffee ends up where the plain water was at the beginning of the brew.
I have both devices, and use them differently; e.g., a coarser grind for percolator.  I find the outcome of percolated coffee to be more like French press or perhaps drip; moka is more like Turkish coffee or espresso. Though similar in concept, they&apos;re (to me) totally different in outcome.
Is this a regional terminology difference?  Am I splitting hairs, or have I been doing this wrong all the years?? :)
I agree to drop &quot;stovetop&quot; as it&apos;s ambiguous.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#74"/>
        <Literal>2015-02-10T12:53:42.783</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#74"/>
        <Literal>60</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#74"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#75"/>
        <Literal>I am apparently not the only one who&apos;s ever been confused about this.  Meta sites do not have an edit queue, and so the &quot;edit&quot; link is not active for (other users&apos;) questions and answers on [meta] for those with less than some threshold rep (1k or 2k depending on the site).  The only reason seems to be that it isn&apos;t necessary and/or it&apos;s harmful to add another queue for mods.
The help section says that any user should be able to suggest edits, which is true on the [main] site.  But because there&apos;s no suggested-edit queue it seems that the edit ability on [meta] only for higher-rep users (1000+; 2000+ on &quot;mature&quot; sites), which is the trusted-user rep threshold at which point you can make edits directly (without going into a suggestion-queue). I suppose this means that at 1k rep you can also edit meta directly, but it&apos;s a little awkward to suggest stuff that ought to be changed &quot;out of band&quot;.  This discourages editing on [meta], which may be a fine thing, but I think it also reduces participation, which is probably not a good thing.
There&apos;s an apparently-stalled (years-old) feature request to expand edit features in [meta]s. Does anyone else want this?  Mods / high-rep users, do you not want this? Is this reasonable for beta-sites, like this one (as of this writing)? 
I suspect this too much of an uphill battle, with losing cost-benefit, of marginal value.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#75"/>
        <Literal>2015-02-10T17:00:34.253</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#75"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#75"/>
        <Literal>Can we turn on suggest-edit for this meta?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#76"/>
        <Literal>I want this quite a lot.
Over on RPG.SE I&apos;m a prolific editor. On other sites I visit I also propose a lot of edits. My main mode of interaction with Stack Exchange sites at this point is to edit and improve content already there. I&apos;ve proposed some edits on here, too. (My accepted:rejected ratio is pretty high in favour of accepted edits at this point.)
But on Meta, I hover over that greyed-out edit link on a post a couple of days old to make an improvement that stands out, and I click it, and then I sigh quietly and move on to continue reading.
If there were a feature that let me actually suggest edits here on meta I&apos;d like that, and I&apos;d use it a lot.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#76"/>
        <Literal>2015-02-11T02:00:26.160</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#76"/>
        <Literal>75</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#76"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#77"/>
        <Literal>I see two tags that seem to be synonymous:

drip
drip-coffee

I can&apos;t think of any use of &quot;drip&quot; that&apos;s on-topic here that would not be identical to &quot;drip-coffee&quot;.
Edits: 

As @Robert says below, the right way is merge/rename/delete to have only one tag.
removed this ill considered aside... Meta-meta: should any tag on Coffee.SE contain the string &quot;coffee&quot;? 

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#77"/>
        <Literal>2015-02-11T16:16:37.473</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#77"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#77"/>
        <Literal>Retag-request: merge drip and drip-coffee (completed)</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#78"/>
        <Literal>The process is actually called &quot;drip brewing&quot;, so I would just rename the tag(s) to drip-brew. No synonym needed; text completion will help users find the proper tag: drip → drip-brew
Meta-meta answer: I didn&apos;t actually have a problem with using the word &quot;coffee&quot; in a tag… assuming that was the proper nomenclature for that particular process. Calling it something else would not help improve clarity, but we don&apos;t have a tag called &quot;french press coffee&quot; or &quot;moka coffee&quot;, so in this case, the point is somewhat moot.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#78"/>
        <Literal>2015-02-11T20:04:46.597</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#78"/>
        <Literal>77</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#78"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#79"/>
        <Literal>I maintain that original research should be permitted; coffee is a mix of science and art:

substantiating references should be provided (and expected) for factually verifiable data: e.g., scientific facts; and
&quot;original research&quot; or experiential recounting should be permissible for the &quot;artful&quot; aspects of coffee; e.g., techniques.

Hopefully expanding on @hardmath&apos;s answer, I believe that community input and verification is the mechanism to ensure a high quality of information, no matter what its source. I think there are three issues here: fact, art, and opinion.
If something is a verifiable fact: e.g., 

Kirk never said &quot;Beam me up, Scotty!&quot; (refs from here)
Han Solo did say &quot;I&apos;m in it for the money.&quot;

These facts can be (and indeed should be) backed up by a reference. If they&apos;re not there, they can be (and should be) added. If they&apos;re false, a countering reference can be provided, and/or the statement gets downvoted, deleted, edited, etc. 
Art-, experience-, or technique-based questions and answers are legitimate; for example:

speculation, such as about diner coffee taste
actual literal art or technique of latte foam
experiential or traditional factors in serving and drinking coffee, like wide serving cups.

These happen to also be high-rating (10+ as of this writing), popular questions; but that doesn&apos;t itself make them legitimate. In some cases, these can (and should) be backed up with citations or references.  Are those examples of non-fact, and are they legitimate?
Purely opinion-based questions and answers are generally not welcome, and I don&apos;t think this site should be any different.  Except, of course, in meta sites, where (paradoxically?) opinion is largely the only topic being discussed. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#79"/>
        <Literal>2015-02-11T20:51:16.203</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#79"/>
        <Literal>52</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#79"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#8"/>
        <Literal>&quot;The Coffee Break&quot;
Not exactly a thing as much as a time, but take it for what it&apos;s worth...
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#8"/>
        <Literal>2015-01-27T22:47:01.130</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#8"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#8"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#80"/>
        <Literal>This was inspired by a few recent posts. Currently we have a couple of tags: ground-coffee and flavored-coffee that contain the word. While the second could lose it easily enough (maybe flavorings would be nicer?), what about the first? ground doesn&apos;t feel quite right, but neither does having &apos;coffee&apos; in the tag.
So this question is two fold:

Should the word coffee be removed/banned from all tag names?
If so, what do we do with the existing ones that do have it?

</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#80"/>
        <Literal>2015-02-11T21:25:24.493</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#80"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#80"/>
        <Literal>Can tags contain the word &apos;coffee&apos;?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#81"/>
        <Literal>I don&apos;t think &quot;coffee&quot; needs to be banned outright from tags, though if others disagree I won&apos;t hold that position at all strongly.
If you do want to remove it from tags, I might suggest replacing the existing ones with grinding and flavoring. They&apos;re a little less odd than just ground and flavor, especially because flavor is more likely to describe questions about how different types and styles of bean, grind, or preparation can affect flavor--which is a different topic entirely from discussing flavored coffee. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#81"/>
        <Literal>2015-02-11T22:47:14.620</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#81"/>
        <Literal>80</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#81"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#82"/>
        <Literal>Moka Mocha
They rhyme and it sounds awesome and rolls off the tongue.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#82"/>
        <Literal>2015-02-11T23:36:17.020</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#82"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#82"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#83"/>
        <Literal>Personally I don&apos;t think that coffee should be removed from the tags unless it is very redundant.
For example, the tag  flavored-coffee would be much more ambiguous as flavoring or flavor. You could then be talking about the flavor of the coffee, or adding flavor shots to a coffee. I think that in certain tags, especially ones like flavored-coffee, we need to keep the word coffee. I feel like ground-coffee needs to have the word coffee in it too.
In other situations, such as dark-roast-coffee, I think that it could be removed entirely. That example is just a hypothetical one though to show where it does get redundant.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#83"/>
        <Literal>2015-02-12T00:22:55.683</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#83"/>
        <Literal>80</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#83"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#84"/>
        <Literal>A compelling reason for doing this is giving people the ability to do other people favors in a very neatly-packaged way, something like this:

I understand what you&apos;re saying, but your last two sentences lost me. I suggested an edit that might clarify what you&apos;re trying to express without changing the intent of your post

The person can then just review the edit, and apply it or change it slightly if they agree. On meta, where it&apos;s much more about voice, that&apos;s pretty ideal. Unfortunately the way you&apos;ve proposed it is just not technically feasible. I&apos;ll go into why.
The voices, man, I keep hearing &apos;em!
Every suggested edit generates an inbox notification. On sites like Ask Ubuntu, Ask Different, Stack Overflow and others where meta sees significantly more participation than other sites, this would create a lot of noise. The alternative is not generating inbox notifications for child meta suggested edits, which (unfortunately, for the most part) means they&apos;d go unseen or approved in a queue by others, and might not be something the author would have approved as suggested. Meta is a town hall; that&apos;s why you need privileges to edit directly on the main site to edit here, one of the chief reasons anyway.
Killed by slow, and do you even meta?
On sites that don&apos;t have very active child meta sites, participation is much lower. Turning on work queues here would just mean creating a backlog that moderators would feel obliged to clean out from time to time. It just wouldn&apos;t work as you intend it to work. Showing them in the main site queue alleviates that to some extent, but that&apos;s shown to everyone regardless of meta participation. Queues where you accomplish small units of work are already a big ask on the main site, I really don&apos;t want to mix them. As meta sites tend to take on their own culture over time, I don&apos;t want non-participants here reviewing suggested edits because the system asked them to.
I am a mean, horrible person.
But with all of that said, turning our engine sort of upside down for discussion here on meta worked well enough. But, it&apos;s missing stuff. There aren&apos;t any polls, people can get down-voted for asking for support, curating is sort of second class and opportunistic and using it as a bug tracker could be made much more ideal.
I hope to take on a project this year that takes a serious look at child meta sites, and how they could perhaps diverge a bit in terms of features from the main sites. This is something I&apos;d like to see possible, just ... better, not bolted on.
I&apos;m declining it as proposed, but that doesn&apos;t make it a bad idea. In fact it&apos;s a good one (heck, I up-voted it), but in need of some groundwork that I really want to do.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#84"/>
        <Literal>2015-02-12T16:19:33.577</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#84"/>
        <Literal>75</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#84"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#85"/>
        <Literal>It will depend. You can say NO when the answer seems to be clear and thoughtful. In the answer, the reader should be able to assume (and maybe see) that:

There was research done/knowledge is acceptable
Information is clear and useful
It&apos;s long enough to provide sufficient information to answer the questions
It&apos;s not a copy-paste answer

You can request the proof of prior research (that means YES) if the reader assumes/sees that:

There is not a lot of information
Just a couple sentences long (unless that is sufficient)
Information is debateable
It looks like its an exact replica of a section in a website

This should be the key points for readers to look for when searching valid and proved answers. I hope this answers you question!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#85"/>
        <Literal>2015-02-13T01:20:36.107</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#85"/>
        <Literal>62</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#85"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#86"/>
        <Literal>Here at Coffee Stack Exchange, we reached public beta about three days ago! This is exciting as we&apos;re slowly moving towards being a non-beta site! Graduated Stack Exchange sites have their own themes, including different icons for stuff like badges. Let&apos;s start thinking about what we&apos;d like our site to look like: please answer this question with ideas about stuff like badge icons, downvote/upvote buttons, color themes, even the background! All ideas are appreciated!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#86"/>
        <Literal>2015-02-13T01:39:42.933</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#86"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#86"/>
        <Literal>What should the design for our site look like?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#87"/>
        <Literal>Badge Icons
My recommendation is that instead of the plain colored circles, there should be coffee cups. This would work great since who doesn&apos;t want a cup of coffee? This is like awarding cups of coffee to people. :-)
Downvote and Upvote Buttons
I would like to keep them just the way they are for some SE originality and it is easier to know what you are doing. If comfortable enough, there might be a green thumbs up for the upvote button and a red thumbs down for the downvote button.
Word Color
I would like to be optional will variety of colors. I&apos;m think of chocolate brown, black, brown, light brown, and all sorts of brown and coffee related colors!
Background
Just like Area 51&apos;s alien themed background, I hope we have a coffee themed background. There would be coffee cups, coffee machines, coffee beans, steam, and a light brown paint underneath all the decorations.
Other
Well I got nothing else. I hope this gets chosen for the new Coffee SE site stlye (if this question survives and there are multiple answers...)! Good Luck to future answers and consider the other meta question about the logo!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#87"/>
        <Literal>2015-02-13T01:48:24.803</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#87"/>
        <Literal>86</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#87"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#88"/>
        <Literal>In general, if it would be obvious from the context that a tag refers to coffee (this is a coffee Q&amp;A site, after all), we might as well leave it out. However, I don&apos;t see the need for a hard-and-fast rule here (or indeed, in most places on StackExchange sites).
As others have mentioned, other tags may need the word coffee in them for clarification (eg. flavored-coffee, which is not the same thing as flavor, or even flavoring).
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#88"/>
        <Literal>2015-02-13T12:47:29.603</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#88"/>
        <Literal>80</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#88"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#89"/>
        <Literal>An excellent question; I don&apos;t see any reason to make health related questions off-topic, but I do suggest we make it clear that people should stick to actual verifiable research (lest we become bombarded with questions about ridiculous psudo-scientific claims).
I&apos;m having a hard time describing the sort of thing I mean without potentially insulting someone, but you probably know the type and can imagine why that would possibly be bad for the sites image.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#89"/>
        <Literal>2015-02-13T12:52:13.503</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#89"/>
        <Literal>12</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#89"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#9"/>
        <Literal>&quot;The Brewing Station&quot;
Another idea that might work...
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#9"/>
        <Literal>2015-01-27T22:48:28.107</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#9"/>
        <Literal>4</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#9"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#90"/>
        <Literal>When we talk about the substance left over after the brewing process, should we refer to it as coffee grinds or coffee grounds.
I am unsure which to use or which is the correct terminology.
If they are both correct, should we choose one?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#90"/>
        <Literal>2015-02-13T15:25:38.630</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#90"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#90"/>
        <Literal>Coffee terminology: Which is correct? Coffee grinds or grounds?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#91"/>
        <Literal>Apparently tea contains more caffeine than coffee. Does it mean tea questions can be on topic?
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#91"/>
        <Literal>2015-02-13T15:33:58.013</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#91"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#91"/>
        <Literal>Are tea-related questions on topic?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#92"/>
        <Literal>Disclaimer: I am British
Here&apos;s how I see it: You grind beans. While you grind the beans, you can adjust the grind. That is to say the grind is the process of grinding.
The grounds are what you get after grinding. I would never call the product of grinding grinds, but then again see disclaimer.
grind - (v.) To smash up beans. Past-tense: ground.
grind - (n.) The process of grinding. Adjusting how one grinds can be expressed as &quot;[modifying] the grind&quot;. Also can refer to the coarsness as appropriate for a certain method of extraction, e.g. &quot;an Espresso grind&quot;.
grounds - (n.) The result of grinding. Ground coffee.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#92"/>
        <Literal>2015-02-13T15:35:52.080</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#92"/>
        <Literal>90</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#92"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#93"/>
        <Literal>No
But there&apos;s an Area 51 Proposal for tea!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#93"/>
        <Literal>2015-02-13T15:37:03.327</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#93"/>
        <Literal>91</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#93"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#94"/>
        <Literal>A cup of coffee with answers and questions coming out of the top of the cup like steam. I think it is very coffee related and original!
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#94"/>
        <Literal>2015-02-13T21:57:47.827</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#94"/>
        <Literal>28</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#94"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#95"/>
        <Literal>Are question about uses of pure coffee oil on topic?
The essential oil is processed through the process of cold pressing using the beans and is a dark brown colour in appearance.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#95"/>
        <Literal>2015-02-14T10:56:00.927</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#95"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#95"/>
        <Literal>Are questions about Coffee Bean Oil on topic?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#96"/>
        <Literal>The beta at Area 51 is defined as follows:

Beta Q&amp;A site for people interested in all aspects of producing and consuming coffee.

Seems that pure coffee oil would fit that bill. I have no experience with coffee oil and I am guessing that is true of many other people, so a few well structured question and answers would be informative.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#96"/>
        <Literal>2015-02-14T17:33:05.050</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#96"/>
        <Literal>95</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#96"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#97"/>
        <Literal>Fully launched StackExchange sites can show community ads for anything their community chooses. There are premade templates for ads for Area51 proposals:
area51 ad http://area51.stackexchange.com/ads/proposal/61013.png
but they&apos;re perhaps not the best for betas, since they still say &quot;proposal&quot; and are pretty generic. Is the premade one good enough? Or does anyone have something they&apos;d like to offer up as an ad for any sites interested in advertising for coffee?
For example, text on a simple image can look good. Here&apos;s one from space:

Here are the image requirements:


The image that you create must be 220 x 250 pixels
Must be hosted through our standard image uploader (imgur)
Must be GIF or PNG
No animated GIFs
Absolute limit on file size of 150 KB


</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#97"/>
        <Literal>2015-02-15T06:31:04.860</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#97"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#97"/>
        <Literal>What should a community ad for coffee.stackexchange look like?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#98"/>
        <Literal>What should we list on the About page under &quot;ask about&quot; and &quot;don&apos;t ask about&quot;. 
Also, what else should go on the What topics can I ask about here? and What types of questions should I avoid asking? pages?
The initial work on this is essentially already done for us in the Area 51 proposal, but we&apos;ll want to flush these out further as well.
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#98"/>
        <Literal>2015-02-16T00:00:31.590</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#98"/>
        <Literal>1</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasTitle"/>
        <NamedIndividual IRI="#98"/>
        <Literal>What should our documentation contain?</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasBody"/>
        <NamedIndividual IRI="#99"/>
        <Literal>I&apos;ve seen people refer to grinds as what comes out of the grinder, and grounds as the spent grinds you&apos;re left with after brewing. This isn&apos;t correct, and should be corrected, just make sure you look out for cases where the person meant to imply spent grounds and fresh grounds respectively. 
</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasCreateTime"/>
        <NamedIndividual IRI="#99"/>
        <Literal>2015-02-16T09:31:10.970</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasParentID"/>
        <NamedIndividual IRI="#99"/>
        <Literal>90</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasPostTypeID"/>
        <NamedIndividual IRI="#99"/>
        <Literal>2</Literal>
    </DataPropertyAssertion>
    <SubDataPropertyOf>
        <DataProperty IRI="#hasBody"/>
        <DataProperty abbreviatedIRI="owl:topDataProperty"/>
    </SubDataPropertyOf>
    <SubDataPropertyOf>
        <DataProperty IRI="#hasCreateTime"/>
        <DataProperty abbreviatedIRI="owl:topDataProperty"/>
    </SubDataPropertyOf>
    <SubDataPropertyOf>
        <DataProperty IRI="#hasParentID"/>
        <DataProperty abbreviatedIRI="owl:topDataProperty"/>
    </SubDataPropertyOf>
    <SubDataPropertyOf>
        <DataProperty IRI="#hasPostTypeID"/>
        <DataProperty abbreviatedIRI="owl:topDataProperty"/>
    </SubDataPropertyOf>
    <SubDataPropertyOf>
        <DataProperty IRI="#hasTitle"/>
        <DataProperty abbreviatedIRI="owl:topDataProperty"/>
    </SubDataPropertyOf>
</Ontology>



<!-- Generated by the OWL API (version 4.5.9.2019-02-01T07:24:44Z) https://github.com/owlcs/owlapi -->

